
Path =  "D:\\MAIN\\MODELS\\AquaPore_Toolkit\\src\\"

# include(Path * "Including.jl")
include(Path * "Cst.jl")
include(Path * "hydro//HydroRelation.jl")
include(Path * "hydro//Wrc.jl")
include(Path * "hydro//Kunsat.jl")

module pumiceManuscript
	using CairoMakie, ColorSchemes
	using CSV, Tables, DataFrames, LaTeXStrings
	import SpecialFunctions: erfc, erfcinv
	import ..wrc, ..kunsat, ..hydroRelation, ..cst

	export PLOTTING_PORESIZE

	PœÉ‚ÇÅ = 1.0
	PœÉ‚ÇÇ = 2.0
	PœÉ‚ÇÉ = 3.0
	PœÉ‚ÇÑ = 4.0

			# ================================================================
					# Plotting parameters
					ColourOption_No    = 1
					Linewidth          = 2
					height             = 200
					labelsize          = 20
					textcolor          = :blue
					textsize           = 20
					titlecolor         = :navyblue
					titlesize          = 18.0
					width              = height * 3.0
					xgridstyle         = :dash
					xgridvisible       = true
					xlabelSize         = 20
					xlabelpadding      = 5
					xminortickalign    = 1.0
					xminorticksvisible = true
					xtickalign         = 0.9 # 0 is inside and 1 is outside
					xticklabelrotation = œÄ / 4.0
					xticksize          = 10
					xticksmirrored     = false
					xtickwidt          = 0.5
					xtrimspine         = false
					ygridstyle         = :dash
					ygridvisible       = false
					ylabelpadding      = xlabelpadding
					ylabelsize         = xlabelSize
					yminortickalign    = xminortickalign
					yminorticksvisible = true
					ytickalign         = xtickalign
					yticksize          = xticksize
					yticksmirrored     = false
					ytickwidt          = xtickwidt
					ytrimspine         = false

	# ------------------------------------------------------------------

	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	#		FUNCTION : HydroModels
	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		function HYDRO_MODELS(;Œ∏s, Œ∏sMacMat_Œ∑, Œ∏r=0.0, œÉ, Ks, Œ®macMat, œÑa=0.5, œÑb, œÑc, œÑaMac=0.5, œÑbMac, œÑcMac, KosugiModel_Œ∏Œ®‚ç∞, KosugiModel_KŒ®‚ç∞, PœÉ=3, PœÉ_Mac=2)

			Œ∏sMacMat   = (Œ∏s - Œ∏r) * Œ∏sMacMat_Œ∑ + Œ∏r
			œÉ_Min=0.7
			œÉ_Max=4.0
			œÑ‚Çö = 90.0

			# Deriving macropore hydraulic parameters from Œ®macMat
				œÉMac    = hydroRelation.FUNC_Œ®macMat_2_œÉMac(;Œ®macMat=Œ®macMat, PœÉ_Mac=2)
				Œ®mMac   = hydroRelation.FUNC_Œ®macMat_2_Œ®mMac(;Œ®macMat=Œ®macMat, œÉMac)

				Œ®m_Min  = hydroRelation.FUNC_œÉ_2_Œ®m(;Œ®macMat= Œ®macMat, œÉ, PœÉ=PœÉ‚ÇÉ, üéè_Min=true)
				Œ®m_Max  = hydroRelation.FUNC_œÉ_2_Œ®m(;Œ®macMat=Œ®macMat, œÉ, PœÉ=PœÉ‚ÇÉ, üéè_Min=false)

				Tb_Max = 2.0; Tc_Max = 4.0
				Tb    = Tb_Max * (1.0 - œÑb)
				TbMac = Tb_Max * (1.0 - œÑbMac)
				Tc    = Tc_Max * (1.0 - œÑc)
				# Tc= œÉ ^ -0.59
				TcMac = Tc_Max * (1.0 - œÑcMac)
			
				KsMac_Min, KsMat_Min = kunsat.kg.FUNC_KsMac(;KosugiModel_œÉ_2_Tb=false, Ks, KosugiModel_KŒ®‚ç∞, Œ∏r, Œ∏s, Œ∏sMacMat, œÉ, œÉ_Max, œÉ_Min, œÉMac, œÑa, œÑaMac, œÑb, œÑbMac, œÑc, œÑcMac, œÑ‚Çö, Œ®m_Min, Œ®macMat, Œ®mMac)

				KsMac_Max, KsMat_Max = kunsat.kg.FUNC_KsMac(;KosugiModel_œÉ_2_Tb=false, Ks, KosugiModel_KŒ®‚ç∞, Œ∏r, Œ∏s, Œ∏sMacMat, œÉ, œÉ_Max, œÉ_Min, œÉMac, œÑa, œÑaMac, œÑb, œÑbMac, œÑc, œÑcMac, œÑ‚Çö, Œ®m_Max, Œ®macMat, Œ®mMac)

			#  For every œà
            Œ®_Min_Log = log10(0.0001)
            Œ®_Max_Log = log10(1500_00)

				Œ® = 10.0.^(collect(Œ®_Min_Log:0.0001:Œ®_Max_Log))
				N = length(Œ®)

			# Initiating
            Kunsat_Min = Array{Float64}(undef, N)
            Kunsat_Max = Array{Float64}(undef, N)
            Œ∏Dual_Min  = Array{Float64}(undef, N)
            Œ∏Dual_Max  = Array{Float64}(undef, N)

			# Looping
			for iŒ®=1:N
		
				# ‚àÇŒ∏‚àÇŒ®_1[iŒ®] = wrc.kg.‚àÇŒ∏‚àÇŒ®_NORM(Œ®‚ÇÅ=Œ®[iŒ®], Œ∏s=Œ∏s, Œ∏r=Œ∏r, Œ®m=Œ®m_Min, œÉ=œÉ, Œ∏sMacMat=Œ∏sMacMat, Œ®mMac=Œ®mMac, Œ®macMat=Œ®macMat, œÉMac=œÉMac)

				# ‚àÇŒ∏‚àÇŒ®_2[iŒ®] =  wrc.kg.‚àÇŒ∏‚àÇŒ®_NORM(Œ®‚ÇÅ=Œ®[iŒ®], Œ∏s=Œ∏s, Œ∏r=Œ∏r,  Œ®m=Œ®m_Max, œÉ=œÉ, Œ∏sMacMat=Œ∏sMacMat, Œ®mMac=Œ®mMac, Œ®macMat=Œ®macMat, œÉMac=œÉMac)

				Œ∏Dual_Min[iŒ®] = wrc.kg.Œ®_2_Œ∏(;Œ®‚ÇÅ=Œ®[iŒ®], Œ∏s, Œ∏sMacMat, Œ∏r, Œ®m=Œ®m_Min, œÉ, Œ®mMac, Œ®macMat, œÉMac, KosugiModel_Œ∏Œ®‚ç∞)

				
				Œ∏Dual_Max[iŒ®] = wrc.kg.Œ®_2_Œ∏(;Œ®‚ÇÅ=Œ®[iŒ®], Œ∏s, Œ∏sMacMat, Œ∏r, Œ®m=Œ®m_Max, œÉ, Œ®mMac, Œ®macMat, œÉMac, KosugiModel_Œ∏Œ®‚ç∞)

				Kunsat_Min[iŒ®] = kunsat.kg.KUNSAT_Œ∏Œ®Se(;Œ®‚ÇÅ=Œ®[iŒ®], Œ∏s=Œ∏s, Œ∏r=Œ∏r, Œ®m=Œ®m_Min, œÉ=œÉ, Œ∏sMacMat=Œ∏sMacMat, Œ®mMac=Œ®mMac, Œ®macMat=Œ®macMat, œÉMac=œÉMac, Ks=Ks, œÑa=œÑa, œÑb=œÑb, œÑc=œÑc, œÑaMac=œÑaMac, œÑbMac=œÑbMac, œÑcMac=œÑcMac, œÉ_Min=œÉ_Min, œÉ_Max=œÉ_Max, KosugiModel_KŒ®‚ç∞, KosugiModel_Œ∏Œ®‚ç∞)

				Kunsat_Max[iŒ®] = kunsat.kg.KUNSAT_Œ∏Œ®Se(;Œ®‚ÇÅ=Œ®[iŒ®], Œ∏s=Œ∏s, Œ∏r=Œ∏r, Œ®m=Œ®m_Max, œÉ=œÉ, Œ∏sMacMat=Œ∏sMacMat,Œ®mMac=Œ®mMac, Œ®macMat=Œ®macMat, œÉMac=œÉMac, Ks=Ks, œÑa=œÑa, œÑb=œÑb, œÑc=œÑc, œÑaMac=œÑaMac, œÑbMac=œÑbMac, œÑcMac=œÑcMac, œÉ_Min=œÉ_Min, œÉ_Max=œÉ_Max, KosugiModel_KŒ®‚ç∞, KosugiModel_Œ∏Œ®‚ç∞)
			end
			
		return Ks, KsMac_Max, KsMac_Max, KsMac_Min, KsMac_Min, KsMat_Max, KsMat_Min, Kunsat_Max, Kunsat_Min, N, PœÉ_Mac, Œ∏Dual_Max, Œ∏Dual_Min, Œ∏s, Œ∏sMacMat, œÉ, Œ®, Œ®macMat
		end  # function: HydroModels
	# ------------------------------------------------------------------


	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	#		FUNCTION : PLOTTING_PORESIZE
	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	function PLOTTING_PORESIZE()

		# Plotting parameters
         ColourOption_No    = 8
         Linewidth          = 2
         height             = 200
         labelsize          = 12
         textcolor          = :blue
         textsize           = 17
         titlecolor         = :darkgoldenrod4
         titlesize          = 20.0
         width              = height * 3.0
         xgridstyle         = :dash
         xgridvisible       = true
         xlabelSize         = 20
         xlabelpadding      = 5
         xminortickalign    = 1.0
         xminorticksvisible = true
         xtickalign         = 0.9 # 0 is inside and 1 is outside
         xticklabelrotation = œÄ/4
         xticksize          = 10
         xticksmirrored     = false
         xtickwidt          = 0.5
         xtrimspine         = false
         ygridstyle         = :dash
         ygridvisible       = false
         ylabelpadding      = xlabelpadding
         ylabelsize         = xlabelSize
         yminortickalign    = xminortickalign
         yminorticksvisible = true
         ytickalign         = xtickalign
         yticksize          = xticksize
         yticksmirrored     = false
         ytickwidt          = xtickwidt
         ytrimspine         = false

			ColourOption = [:glasbey_hv_n256,:seaborn_bright,:seaborn_colorblind,:seaborn_dark,:seaborn_deep,:tab10,:tableau_10,:tol_bright]

			Colormap = cgrad(colorschemes[ColourOption[ColourOption_No]], size(colorschemes[ColourOption[ColourOption_No]]), categorical = true)

			Œ®ticks = [0, 50, 100, 500, 1000,5000,100_00, 500_00, 1000_00, 2000_00] # mm

		# Starting to plot	
			CairoMakie.activate!(type="svg", pt_per_unit=1)
			Fig =  Figure(figure_padding = 10; fonts = ( ; regular="CMU Serif")) 


		Axis_Œ∏Œ® = Axis(Fig[1,1], xlabel= L"$œà$ [kPa]", ylabel=L"$Œ∏$ [L¬≥ L‚Åª¬≥]", title="Sandy soil", titlecolor=titlecolor, xticklabelrotation=xticklabelrotation, ylabelsize=ylabelsize, xlabelsize=xlabelSize, xticksize=xticksize, yticksize=yticksize, width=width, height=height,   titlesize=titlesize,  xgridvisible=xgridvisible, ygridvisible=ygridvisible, xminorticksvisible=xminorticksvisible, yminorticksvisible=yminorticksvisible, xtickwidth=xtickwidt, ytickwidth=ytickwidt, xtickalign=xtickalign, ytickalign=ytickalign, xticksmirrored=xticksmirrored, yticksmirrored=yticksmirrored,  xtrimspine=xtrimspine,  ytrimspine=ytrimspine, xgridstyle=xgridstyle, ygridstyle=ygridstyle, yminorticks=IntervalsBetween(5), xlabelpadding=xlabelpadding, ylabelpadding=ylabelpadding, xminortickalign=xminortickalign, yminortickalign=yminortickalign)

		Label(Fig[1, 1, TopRight()], "(A1)", fontsize=18, font=:bold, padding=(-50, 5, -50, 5), halign=:right)

		Ks, KsMac_Max, KsMac_Max, KsMac_Min, KsMac_Min, KsMat_Max, KsMat_Min, Kunsat_Max, Kunsat_Min, N, PœÉ_Mac, Œ∏Dual_Max, Œ∏Dual_Min, Œ∏s, Œ∏sMacMat, œÉ, Œ®, Œ®macMat =HYDRO_MODELS(Œ∏s=0.5, Œ∏sMacMat_Œ∑=0.75, Œ∏r=0.0, œÉ=1.0, Ks=0.08, Œ®macMat=100.0, œÑa=0.5, œÑb=0.6, œÑc=0.5, œÑaMac=0.5, œÑbMac=0.9, œÑcMac=0.03, KosugiModel_Œ∏Œ®‚ç∞="Œ®macMat", KosugiModel_KŒ®‚ç∞="Œ®macMat")

				Label(Fig[1, 1:2, Top()], "Functions Œ∏(œà) & K(œà) macropore PœÉ_Mac=$PœÉ_Mac", valign=:bottom, font=:bold, padding=(0, 0,50, 0), color=:navajowhite4,  fontsize=titlesize*1.2)
					
				Œ®_Log = Array{Float64}(undef, N)
				for iZ=1:N
					Œ®_Log[iZ] = log1p(Œ®[iZ])
				end

				Axis_Œ∏Œ®.xticks = (log1p.(Œ®ticks), string.(cst.Mm_2_kPa .* Œ®ticks))
				hidexdecorations!(Axis_Œ∏Œ®, ticks=false, grid=false)

				lines!(Axis_Œ∏Œ®, Œ®_Log, Œ∏Dual_Min, linewidth=Linewidth, label="Macro œÉ =$œÉ, œà‚Çò_Min", color=Colormap[1], linestyle=:dashdot)
				lines!(Axis_Œ∏Œ®, Œ®_Log, Œ∏Dual_Max, linewidth=Linewidth, label="Macro œÉ =$œÉ, œà‚Çò_Max",  color=Colormap[1])

				lines!(Axis_Œ∏Œ®,[Point(log1p(Œ®macMat),0), Point(log1p(Œ®macMat), Œ∏s)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)
				lines!(Axis_Œ∏Œ®,[Point(log1p(0), Œ∏sMacMat ), Point(log1p(Œ®macMat), Œ∏sMacMat)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)
				lines!(Axis_Œ∏Œ®,[Point(log1p(0), Œ∏s), Point(log1p(Œ®macMat), Œ∏s)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)

				text!(log1p(0), Œ∏sMacMat, text =L"Œ∏_{sMacMat}", align=(:left,:top),  color=textcolor, fontsize=textsize)
				text!(log1p(0), Œ∏s, text =L"Œ∏_{s}", align=(:left,:top),  color=textcolor, fontsize=textsize)
				text!(log1p(Œ®macMat), 0, text =L"œà_{MacMat}", align=(:left,:bottom), rotation = œÄ/2,  color=textcolor, fontsize=textsize)
				
				Ks_Trad, KsMac_Max_Trad, KsMac_Max_trad, KsMac_Min_Trad, KsMac_Min_Trad, KsMat_Max_Trad, KsMat_Min_trad, Kunsat_Max_Trad, Kunsat_Min_Trad, N, PœÉ_Mac, Œ∏Dual_Max_Trad, Œ∏Dual_Min_Trad, Œ∏s, Œ∏sMacMat, œÉ, Œ®, Œ®macMat = HYDRO_MODELS(;Œ∏s=0.5, Œ∏sMacMat_Œ∑=0.75, Œ∏r=0.0, œÉ=1.0, Ks=0.08, Œ®macMat=100.0, œÑa=0.5, œÑb=0.6, œÑc=0.6, œÑaMac=0.5, œÑbMac=0.6, œÑcMac=0.0, KosugiModel_Œ∏Œ®‚ç∞="Traditional", KosugiModel_KŒ®‚ç∞="Traditional")

				lines!(Axis_Œ∏Œ®, Œ®_Log, Œ∏Dual_Min_Trad, linewidth=Linewidth, label="Trad œÉ =$œÉ, œà‚Çò_Min", color=Colormap[2], linestyle=:dashdot)
				lines!(Axis_Œ∏Œ®, Œ®_Log, Œ∏Dual_Max_Trad, linewidth=Linewidth, label="Trad œÉ =$œÉ, œà‚Çò_Max",  color=Colormap[2])


		Axis_KŒ® = Axis(Fig[2,1], xlabel=L"$œà$ [kPa]", ylabel=L"$K(œà)$ [cm h‚Åª¬π]", xticklabelrotation=xticklabelrotation, ylabelsize=ylabelsize,	xlabelsize=xlabelSize, xticksize=xticksize, yticksize=yticksize, width=width, height=height, xgridvisible=xgridvisible, ygridvisible=ygridvisible, xminorticksvisible=xminorticksvisible, yminorticksvisible=yminorticksvisible, xtickwidth=xtickwidt, ytickwidth=ytickwidt, xticksmirrored=xticksmirrored,  yticksmirrored=yticksmirrored, xtrimspine=xtrimspine,  ytrimspine=ytrimspine, xtickalign=xtickalign, ytickalign=ytickalign, yminorticks=IntervalsBetween(5), xgridstyle=xgridstyle, ygridstyle=ygridstyle, xlabelpadding=xlabelpadding, ylabelpadding=ylabelpadding, xminortickalign=xminortickalign, yminortickalign=yminortickalign)

			Label(Fig[2, 1, TopRight()], "(A2)", fontsize=18, font=:bold, padding = (-50, 5, -50, 5), halign=:right)

			Axis_KŒ®.xticks = (log1p.(Œ®ticks), string.(cst.Mm_2_kPa .* Œ®ticks))

			lines!(Axis_KŒ®, Œ®_Log , cst.MmS_2_CmH .* Kunsat_Min,  linewidth=Linewidth, color=Colormap[1], linestyle=:dashdot)
			lines!(Axis_KŒ®, Œ®_Log , cst.MmS_2_CmH .* Kunsat_Max, linewidth=Linewidth, color=Colormap[1])

			lines!(Axis_KŒ®, Œ®_Log , cst.MmS_2_CmH .* Kunsat_Min_Trad,  linewidth=Linewidth, color=Colormap[2], linestyle=:dashdot)
			lines!(Axis_KŒ®, Œ®_Log , cst.MmS_2_CmH .* Kunsat_Max_Trad, linewidth=Linewidth, color=Colormap[2])

			lines!(Axis_KŒ®,[Point(log1p(Œ®macMat),0), Point(log1p(Œ®macMat), cst.MmS_2_CmH .* Ks)], color=:navyblue, linewidth=Linewidth/2.0,  linestyle=:dash)
			lines!(Axis_KŒ®,[Point(log1p(0), cst.MmS_2_CmH .* KsMat_Min ), Point(log1p(Œ®macMat), cst.MmS_2_CmH .*  KsMat_Min)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)
			lines!(Axis_KŒ®,[Point(log1p(0), cst.MmS_2_CmH .* KsMat_Max ), Point(log1p(Œ®macMat), cst.MmS_2_CmH .*  KsMat_Max)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)
			lines!(Axis_KŒ®,[Point(log1p(0),  cst.MmS_2_CmH .* Ks), Point(log1p(Œ®macMat), cst.MmS_2_CmH .* Ks)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)

			text!(log1p(0),  cst.MmS_2_CmH .* KsMat_Min, text =L"K_{sMacMin}", align=(:left,:top), color=textcolor, fontsize=textsize)
			text!(log1p(0),  cst.MmS_2_CmH .* KsMat_Max, text =L"K_{sMacMax}", align=(:left,:top), color=textcolor, fontsize=textsize)
			text!(log1p(0),  cst.MmS_2_CmH .* Ks, text =L"K_{s}", align=(:left,:top), color=textcolor, fontsize=textsize)
			text!(log1p(Œ®macMat), 0, text =L"œà_{MacMat}", align=(:left,:bottom), rotation = œÄ/2, color=textcolor, fontsize=textsize)

			# Legend
				Legend(Fig[3,1], Axis_Œ∏Œ®, framecolor=(:grey, 0.5), labelsize=labelsize, valign=:top, padding=5, tellheight=true, tellwidt=true, nbanks=2, backgroundcolor = (:grey90, 0.25))

		# ========================================

		Axis_Œ∏Œ®2 = Axis(Fig[1,2], xlabel= L"$œà$ [kPa]", ylabel=L"$Œ∏$ [L¬≥ L‚Åª¬≥]", title="Clay soils",  titlecolor=titlecolor, xticklabelrotation=xticklabelrotation, ylabelsize=ylabelsize, xlabelsize=xlabelSize, xticksize=xticksize, yticksize=yticksize, width=width, height=height, titlesize=titlesize,  xgridvisible=xgridvisible, ygridvisible=ygridvisible, xminorticksvisible=xminorticksvisible, yminorticksvisible=yminorticksvisible, xtickwidth=xtickwidt, ytickwidth=ytickwidt, xtickalign=xtickalign, ytickalign=ytickalign, xticksmirrored=xticksmirrored, yticksmirrored=yticksmirrored,  xtrimspine=xtrimspine,  ytrimspine=ytrimspine, xgridstyle=xgridstyle, ygridstyle=ygridstyle, yminorticks=IntervalsBetween(5), xlabelpadding=xlabelpadding, ylabelpadding=ylabelpadding, xminortickalign=xminortickalign, yminortickalign=yminortickalign)

			Label(Fig[1, 2, TopRight()], "(B1)", fontsize=18, font=:bold, padding=(-50, 5, -50, 5), halign=:right)

			Ks, KsMac_Max, KsMac_Max, KsMac_Min, KsMac_Min, KsMat_Max, KsMat_Min, Kunsat_Max, Kunsat_Min, N, PœÉ_Mac, Œ∏Dual_Max, Œ∏Dual_Min, Œ∏s, Œ∏sMacMat, œÉ, Œ®, Œ®macMat =HYDRO_MODELS(Œ∏s=0.5, Œ∏sMacMat_Œ∑=0.75, Œ∏r=0.0, œÉ=3.0, Ks=0.08, Œ®macMat=100.0, œÑa=0.5, œÑb=0.5, œÑc=0.6, œÑaMac=0.5, œÑbMac=0.6, œÑcMac=0.0, KosugiModel_Œ∏Œ®‚ç∞="Œ®macMat", KosugiModel_KŒ®‚ç∞="Œ®macMat")

				Œ®_Log = Array{Float64}(undef, N)
				for iZ=1:N
					Œ®_Log[iZ] = log1p(Œ®[iZ])
				end

				Axis_Œ∏Œ®2.xticks = (log1p.(Œ®ticks), string.(cst.Mm_2_kPa .* Œ®ticks))
				hidexdecorations!(Axis_Œ∏Œ®2, ticks=false, grid=false)

				lines!(Axis_Œ∏Œ®2, Œ®_Log, Œ∏Dual_Min, linewidth=Linewidth, label="Macro œÉ =$œÉ, œà‚Çò_Min", color=Colormap[3], linestyle=:dashdot)
				lines!(Axis_Œ∏Œ®2, Œ®_Log, Œ∏Dual_Max, linewidth=Linewidth, label="Macro œÉ =$œÉ, œà‚Çò_Max",  color=Colormap[3])

				lines!(Axis_Œ∏Œ®2,[Point(log1p(Œ®macMat),0), Point(log1p(Œ®macMat), Œ∏s)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)
				lines!(Axis_Œ∏Œ®2,[Point(log1p(0), Œ∏sMacMat ), Point(log1p(Œ®macMat), Œ∏sMacMat)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)
				lines!(Axis_Œ∏Œ®2,[Point(log1p(0), Œ∏s), Point(log1p(Œ®macMat), Œ∏s)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)

				text!(log1p(0), Œ∏sMacMat, text =L"Œ∏_{sMacMat}", align=(:left,:top),  color=textcolor, fontsize=textsize)
				text!(log1p(0), Œ∏s, text =L"Œ∏_{s}", align=(:left,:top),  color=textcolor, fontsize=textsize)
				text!(log1p(Œ®macMat), 0, text =L"œà_{MacMat}", align=(:left,:bottom), rotation = œÄ/2,  color=textcolor, fontsize=textsize)
				
				Ks_Trad, KsMac_Max_Trad, KsMac_Max_trad, KsMac_Min_Trad, KsMac_Min_Trad, KsMat_Max_Trad, KsMat_Min_trad, Kunsat_Max_Trad, Kunsat_Min_Trad, N, PœÉ_Mac, Œ∏Dual_Max_Trad, Œ∏Dual_Min_Trad, Œ∏s, Œ∏sMacMat, œÉ, Œ®, Œ®macMat = HYDRO_MODELS(;Œ∏s=0.5, Œ∏sMacMat_Œ∑=0.75, Œ∏r=0.0, œÉ=3.0, Ks=0.08, Œ®macMat=100.0, œÑa=0.5, œÑb=0.6, œÑc=0.6, œÑaMac=0.5, œÑbMac=0.6, œÑcMac=0.0, KosugiModel_Œ∏Œ®‚ç∞="Traditional", KosugiModel_KŒ®‚ç∞="Traditional")

				lines!(Axis_Œ∏Œ®2, Œ®_Log, Œ∏Dual_Min_Trad, linewidth=Linewidth, label="Trad œÉ =$œÉ, œà‚Çò_Min", color=Colormap[4], linestyle=:dashdot)
				lines!(Axis_Œ∏Œ®2, Œ®_Log, Œ∏Dual_Max_Trad, linewidth=Linewidth, label="Trad œÉ =$œÉ, œà‚Çò_Max",  color=Colormap[4])


		Axis_KŒ®2 = Axis(Fig[2,2], xlabel=L"$œà$ [kPa]", ylabel=L"$K(œà)$ [cm h‚Åª¬π]", xticklabelrotation=xticklabelrotation, ylabelsize=ylabelsize,	xlabelsize=xlabelSize, xticksize=xticksize, yticksize=yticksize, width=width, height=height, xgridvisible=xgridvisible, ygridvisible=ygridvisible, xminorticksvisible=xminorticksvisible, yminorticksvisible=yminorticksvisible, xtickwidth=xtickwidt, ytickwidth=ytickwidt, xticksmirrored=xticksmirrored,  yticksmirrored=yticksmirrored, xtrimspine=xtrimspine,  ytrimspine=ytrimspine, xtickalign=xtickalign, ytickalign=ytickalign, yminorticks=IntervalsBetween(5), xgridstyle=xgridstyle, ygridstyle=ygridstyle, xlabelpadding=xlabelpadding, ylabelpadding=ylabelpadding, xminortickalign=xminortickalign, yminortickalign=yminortickalign )

			Label(Fig[2, 2, TopRight()], "(B2)", fontsize=18, font=:bold, padding = (-50, 5, -50, 5), halign=:right)

			Axis_KŒ®2.xticks = (log1p.(Œ®ticks), string.(cst.Mm_2_kPa .* Œ®ticks))

			lines!(Axis_KŒ®2, Œ®_Log , cst.MmS_2_CmH .* Kunsat_Min,  linewidth=Linewidth, color=Colormap[3], linestyle=:dashdot)
			lines!(Axis_KŒ®2, Œ®_Log , cst.MmS_2_CmH .* Kunsat_Max, linewidth=Linewidth, color=Colormap[3])

			lines!(Axis_KŒ®2, Œ®_Log , cst.MmS_2_CmH .* Kunsat_Min_Trad,  linewidth=Linewidth, color=Colormap[4], linestyle=:dashdot)
			lines!(Axis_KŒ®2, Œ®_Log , cst.MmS_2_CmH .* Kunsat_Max_Trad, linewidth=Linewidth, color=Colormap[4])

			lines!(Axis_KŒ®2,[Point(log1p(Œ®macMat),0), Point(log1p(Œ®macMat), cst.MmS_2_CmH .* Ks)], color=:navyblue, linewidth=Linewidth/2.0,  linestyle=:dash)
			lines!(Axis_KŒ®2,[Point(log1p(0), cst.MmS_2_CmH .* KsMat_Min ), Point(log1p(Œ®macMat), cst.MmS_2_CmH .*  KsMat_Min)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)
			lines!(Axis_KŒ®2,[Point(log1p(0), cst.MmS_2_CmH .* KsMat_Max ), Point(log1p(Œ®macMat), cst.MmS_2_CmH .*  KsMat_Max)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)
			lines!(Axis_KŒ®2,[Point(log1p(0),  cst.MmS_2_CmH .* Ks), Point(log1p(Œ®macMat), cst.MmS_2_CmH .* Ks)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)

			text!(log1p(0),  cst.MmS_2_CmH .* KsMat_Min, text =L"K_{sMacMin}", align=(:left,:top), color=textcolor, fontsize=textsize)
			text!(log1p(0),  cst.MmS_2_CmH .* KsMat_Max, text =L"K_{sMacMax}", align=(:left,:top), color=textcolor, fontsize=textsize)
			text!(log1p(0),  cst.MmS_2_CmH .* Ks, text =L"K_{s}", align=(:left,:top), color=textcolor, fontsize=textsize)
			text!(log1p(Œ®macMat), 0, text =L"œà_{MacMat}", align=(:left,:bottom), rotation = œÄ/2, color=textcolor, fontsize=textsize)

			# Legend
				Legend(Fig[3,2], Axis_Œ∏Œ®2, framecolor=(:grey, 0.5), labelsize=labelsize, valign=:top, padding=5, tellheight=true, tellwidt=true, nbanks=2, backgroundcolor = (:grey90, 0.25))

			# General
				resize_to_layout!(Fig)
				trim!(Fig.layout)
				colgap!(Fig.layout, 10)
				rowgap!(Fig.layout, 10)

				Path = raw"D:\TEMP\Plots\MacroporeThetaH.svg"
				save(Path, Fig)
				display(Fig)

		
	return nothing
	end  # function: PLOTTING_PORESIZE


	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	#		FUNCTION : PLOTTING_KUNSAT_MACRO_TbMac
	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	function PLOTTING_KUNSAT_MACRO_TbMac()

		function RELATIONSHIPS_MAC(Œ®macMat; PœÉ_Mac=2)
			œÉMac    = hydroRelation.FUNC_Œ®macMat_2_œÉMac(;Œ®macMat, PœÉ_Mac)
			Œ®mMac   = hydroRelation.FUNC_Œ®macMat_2_Œ®mMac(;Œ®macMat=Œ®macMat)
		return œÉMac, Œ®mMac
		end  # function: RELATIONSHIPS_MAC

		function RELATIONSHIPS_MAT(Œ®macMat, œÉ; PœÉ=3)
			# Œ®macMat‚ÇÇ = exp((log(‚àöŒ®macMat) + log(Œ®macMat)) * 0.5)
			# Œ®m  = hydroRelation.FUNC_œÉ_2_Œ®m(;Œ®macMat=Œ®macMat‚ÇÇ, œÉ, PœÉ=PœÉ, üéè_Min=false)
			Œ®m = (Œ®macMat^ 0.75) * exp(œÉ * PœÉ)
		return Œ®m
		end

		function Œ∏œà_KUNSAT_MAT_Œ∑(;Œ®‚ÇÅ=Œ®‚ÇÅ, Œ∏s=0.4, Œ∏sMacMat=0.35, Œ∏r=0.0, œÉ, Œ®macMat, œÑb, œÑbMac=0.619, Ks=1.0, œÑa=0.5, œÑaMac=0.5, œÑc=1.0, œÑcMac=2.0, œÑ‚Çö=2.0)

			Œ®m = RELATIONSHIPS_MAT(Œ®macMat, œÉ)
			œÉMac, Œ®mMac = RELATIONSHIPS_MAC(Œ®macMat)
			œÉ_Min=0.7
			œÉ_Max=4.0

			KosugiModel_œÉ_2_Tb = false
			KosugiModel_KŒ®‚ç∞ = "Œ®macMat"
			KosugiModel_Œ∏Œ®‚ç∞ = "Œ®macMat"

         Kunsat_Mat_Norm = kunsat.kg.KUNSAT_Œ∏Œ®Se(;Œ®‚ÇÅ=Œ®‚ÇÅ, Œ∏s, Œ∏sMacMat, Œ∏r, Œ®m, œÉ, Œ®mMac, Œ®macMat, œÉMac, Ks, œÑa, œÑb, œÑc, œÑ‚Çö, œÑaMac, œÑbMac, œÑcMac, œÉ_Min, œÉ_Max, KosugiModel_KŒ®‚ç∞=KosugiModel_KŒ®‚ç∞, KosugiModel_Œ∏Œ®‚ç∞=KosugiModel_Œ∏Œ®‚ç∞, KosugiModel_œÉ_2_Tb=KosugiModel_œÉ_2_Tb)


         KsMac, KsMat = kunsat.kg.FUNC_KsMac(;KosugiModel_œÉ_2_Tb, Ks, KosugiModel_KŒ®‚ç∞, Œ∏r, Œ∏s, Œ∏sMacMat, œÉ, œÉ_Max, œÉ_Min, œÉMac, œÑa, œÑaMac, œÑb, œÑbMac, œÑc, œÑcMac, œÑ‚Çö, Œ®m, Œ®macMat, Œ®mMac)

         Œ∏Dual = wrc.kg.Œ®_2_Œ∏(;Œ®‚ÇÅ=Œ®‚ÇÅ, Œ∏s, Œ∏sMacMat, Œ∏r, Œ®m, œÉ, Œ®mMac, Œ®macMat, œÉMac, KosugiModel_Œ∏Œ®‚ç∞=KosugiModel_Œ∏Œ®‚ç∞)
		return KsMat, Kunsat_Mat_Norm, Œ∏Dual
		end

		# Parameters
         Œ∏s = 0.4
         Œ∏r = 0.0
         Ks = 1.0
			œÑbMac = 0.619
			œÑb = 1.1

		#  For every œà
			Œ®_Min_Log = log10(0.0001)
			Œ®_Max_Log = log10(1500_00.0)
			Œ® = 10.0.^(collect(Œ®_Min_Log:0.0001:Œ®_Max_Log))
			N_Œ®  = length(Œ®)

			œÉ =  collect(range(0.7, stop=3., length=3))
			N_œÉ = length(œÉ)

			Texture = ["Sandy soils", "Silty soils", "Clay soils"] 

			Tb2 = collect(range(0.6, stop=1.5, length=4))
			N_Tb = length(Tb2)

			Œ®macMat = collect(range(30.0, stop=200.0, length=3))
			N_Œ®macMat = length(Œ®macMat)

			# Œ∏sMacMat_Œ∑ = collect(range(0.75, stop=1.0, length=4))
			# N_Œ∏sMacMat_Œ∑  = length(Œ∏sMacMat_Œ∑)
      	# Œ∏sMacMat = Œ∏s .* Œ∏sMacMat_Œ∑

			# KsMac = zeros(100)

		
		# FUNCTION Kunsat_Tb
         KunsatMat_Tb = zeros(N_Œ®, N_œÉ, N_Tb, N_Œ®macMat)
         KsMatrice    = zeros(N_œÉ, N_Tb, N_Œ®macMat)
			Œ∏œà = zeros(N_Œ®, N_œÉ, N_Tb, N_Œ®macMat)
			
			for (iiŒ®, iŒ®) in enumerate(Œ®), (iiœÉ, iœÉ) in enumerate(œÉ), (iiTb, iTb) in enumerate(Tb2), (iiŒ®macMat, iŒ®macMat) in enumerate(Œ®macMat)

			 	# KsMatrice[iiœÉ, iiTb, iiŒ®macMat], KunsatMat_Tb[iiŒ®, iiœÉ, iiTb, iiŒ®macMat], Œ∏œà[iiŒ®, iiœÉ, iiTb, iiŒ®macMat] = Œ∏œà_KUNSAT_MAT_Œ∑(;Œ®‚ÇÅ=iŒ®, œÉ=iœÉ, œÑb=iTb, œÑbMac=œÑbMac, Œ®macMat=iŒ®macMat)

				 KsMatrice[iiœÉ, iiTb, iiŒ®macMat], KunsatMat_Tb[iiŒ®, iiœÉ, iiTb, iiŒ®macMat], Œ∏œà[iiŒ®, iiœÉ, iiTb, iiŒ®macMat] = Œ∏œà_KUNSAT_MAT_Œ∑(;Œ®‚ÇÅ=iŒ®, œÉ=iœÉ, œÑb=œÑb, œÑbMac=iTb, Œ®macMat=iŒ®macMat)
			end

		# ================================================================
				# Plotting parameters
         ColourOption_No    = 1
         Linewidth          = 2
         height             = 200
         labelsize          = 20
         textcolor          = :blue
         textsize           = 20
         titlecolor         = :navyblue
         titlesize          = 18.0
         width              = height * 3.0
         xgridstyle         = :dash
         xgridvisible       = true
         xlabelSize         = 20
         xlabelpadding      = 5
         xminortickalign    = 1.0
         xminorticksvisible = true
         xtickalign         = 0.9 # 0 is inside and 1 is outside
         xticklabelrotation = œÄ / 4.0
         xticksize          = 10
         xticksmirrored     = false
         xtickwidt          = 0.5
         xtrimspine         = false
         ygridstyle         = :dash
         ygridvisible       = false
         ylabelpadding      = xlabelpadding
         ylabelsize         = xlabelSize
         yminortickalign    = xminortickalign
         yminorticksvisible = true
         ytickalign         = xtickalign
         yticksize          = xticksize
         yticksmirrored     = false
         ytickwidt          = xtickwidt
         ytrimspine         = false


			ColourOption = [:glasbey_hv_n256,:seaborn_bright,:seaborn_colorblind,:seaborn_dark,:seaborn_deep,:tab10,:tableau_10,:tol_bright]

			Colormap = cgrad(colorschemes[ColourOption[ColourOption_No]], size(colorschemes[ColourOption[ColourOption_No]]), categorical = true)

			Œ®ticks = [0, 50, 100, 500, 1000,5000,100_00, 500_00, 1000_00, 1500_00] # mm

			Œ®_Log = Array{Float64}(undef, N_Œ®)
				for iZ=1:N_Œ®
					Œ®_Log[iZ] = log1p(Œ®[iZ])
				end

		# Starting to plot	
			CairoMakie.activate!(type="svg", pt_per_unit=1)
			Fig =  Figure(figure_padding = 10; fonts = ( ; regular="CMU Serif"), backgroundcolor = :grey100) 

			Label(Fig[1, 1:N_œÉ, Top()], L"Lognormal bimodal $Kœà$_MacMat model", valign=:bottom, font=:bold, padding=(0, 0, 50, 0), color=:darkblue,  fontsize=titlesize*1.5)

			Axis_KunsatMat_Tb = []
			for (iiœÉ, iœÉ) in enumerate(œÉ)
				for(iiŒ®macMat, iŒ®macMat) in enumerate(Œ®macMat)

				if iiœÉ==1
					Label(Fig[iiœÉ, iiŒ®macMat, TopRight()], "($iiœÉ-$iiŒ®macMat)", fontsize=18, padding=(-50, 5, -100, 10), halign=:right, font=("CMU Serif"))
					else
						Label(Fig[iiœÉ, iiŒ®macMat, TopRight()], "($iiœÉ-$iiŒ®macMat)", fontsize=18, padding=(-50, 5, -50, 10), halign=:right, font=("CMU Serif"))
					end

					Axis_KunsatMat_Tb = Axis(Fig[iiœÉ, iiŒ®macMat], xlabel= L"$œà$ [kPa]", ylabel=L"$K(\psi)$ [L T ‚Åª¬π]", title="$(Texture[iiœÉ]) Œ®macMat=$(Int32(floor(iŒ®macMat, digits=0))) mm" ,  titlecolor=titlecolor, xticklabelrotation=xticklabelrotation, ylabelsize=ylabelsize, xlabelsize=xlabelSize, xticksize=xticksize, yticksize=yticksize, width=width, height=height, titlesize=titlesize,  xgridvisible=xgridvisible, ygridvisible=ygridvisible, xminorticksvisible=xminorticksvisible, yminorticksvisible=yminorticksvisible, xtickwidth=xtickwidt, ytickwidth=ytickwidt, xtickalign=xtickalign, ytickalign=ytickalign, xticksmirrored=xticksmirrored, yticksmirrored=yticksmirrored, xtrimspine=xtrimspine,  ytrimspine=ytrimspine, xgridstyle=xgridstyle, ygridstyle=ygridstyle, yminorticks=IntervalsBetween(5), xlabelpadding=xlabelpadding, ylabelpadding=ylabelpadding, xminortickalign=xminortickalign, yminortickalign=yminortickalign, titlefont = "CMU Serif")

						Axis_KunsatMat_Tb.xticks = (log1p.(Œ®ticks), string.(cst.Mm_2_kPa .* Œ®ticks))

						if iiœÉ < N_œÉ
							hidexdecorations!(Axis_KunsatMat_Tb, ticks=false, grid=false)
						end

						if iiŒ®macMat > 1
							hideydecorations!(Axis_KunsatMat_Tb, ticks=false, grid=false)
						end

						for (iiTb, iTb) in enumerate(Tb2)
							lines!(Fig[iiœÉ, iiŒ®macMat], Œ®_Log, KunsatMat_Tb[:, iiœÉ, iiTb, iiŒ®macMat], linewidth=Linewidth, color=Colormap[iiTb], label="œÉ =$(floor(œÉ[iiœÉ], digits=2)) œÑ·µ¶Mac =$(floor(iTb, digits=2))")

							# lines!(Fig[iiœÉ, iiŒ®macMat], Œ®_Log, Œ∏œà[:, iiœÉ, iiTb, iiŒ®macMat], linewidth=Linewidth, color=Colormap[iiTb], label="œÉ =$(floor(œÉ[iiœÉ], digits=2)) Tb=$(floor(iTb, digits=2))")

							lines!(Axis_KunsatMat_Tb,[Point(log1p(0.0), KsMatrice[iiœÉ, iiTb, iiŒ®macMat] ), Point(log1p(Œ®macMat[iiŒ®macMat]), KsMatrice[iiœÉ, iiTb, iiŒ®macMat])], color=Colormap[iiTb], linewidth=Linewidth/2.0, linestyle=:dash)
						end

						lines!(Axis_KunsatMat_Tb,[Point(log1p(Œ®macMat[iiŒ®macMat]), 0.0), Point(log1p(Œ®macMat[iiŒ®macMat]), 1.0)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)
						text!(log1p(Œ®macMat[iiŒ®macMat]), 0, text =L"œà_{MacMat}", align=(:left,:bottom), rotation = œÄ/2,  color=textcolor, fontsize=textsize)
						text!(log1p(0),  0.5, text =L"K_{sMacMat}", align=(:left,:bottom), color=textcolor, fontsize=textsize, rotation = œÄ/2)
	
				end # for(iiŒ®macMat, iŒ®macMat) in enumerate(Œ®macMat)

				Legend(Fig[iiœÉ,N_Œ®macMat+1], Axis_KunsatMat_Tb, framecolor=(:grey, 0.5), labelsize=labelsize, valign=:top, padding=5, tellheight=true, tellwidt=true, nbanks=1, backgroundcolor=:gray100)
			end # for (iiœÉ, iœÉ) in enumerate(œÉ)

			# General
				resize_to_layout!(Fig)
				trim!(Fig.layout)
				colgap!(Fig.layout, 20)
				rowgap!(Fig.layout, 20)

				Path = raw"D:\TEMP\Plots\MacroKunsat_TbMac.svg"
				save(Path, Fig)
				display(Fig)
		
	return nothing
	end  # function: name
	# ------------------------------------------------------------------




	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	#		FUNCTION : PLOTTING_KUNSAT_MACRO
	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	function PLOTTING_KUNSAT_MACRO()

		function RELATIONSHIPS_MAC(Œ®macMat; PœÉ_Mac=2)
			œÉMac    = hydroRelation.FUNC_Œ®macMat_2_œÉMac(;Œ®macMat, PœÉ_Mac)
			Œ®mMac   = hydroRelation.FUNC_Œ®macMat_2_Œ®mMac(;Œ®macMat=Œ®macMat)
		return œÉMac, Œ®mMac
		end  # function: RELATIONSHIPS_MAC

		function RELATIONSHIPS_MAT(Œ®macMat, œÉ; PœÉ=3)
			# Œ®macMat‚ÇÇ = exp((log(‚àöŒ®macMat) + log(Œ®macMat)) * 0.5)
			# Œ®m  = hydroRelation.FUNC_œÉ_2_Œ®m(;Œ®macMat=Œ®macMat‚ÇÇ, œÉ, PœÉ=PœÉ, üéè_Min=false)
			Œ®m = (Œ®macMat^ 0.75) * exp(œÉ * PœÉ)
		return Œ®m
		end

		function Œ∏œà_KUNSAT_MAT_Œ∑(;Œ®‚ÇÅ=Œ®‚ÇÅ, Œ∏s=0.4, Œ∏sMacMat=0.35, Œ∏r=0.0, œÉ, Œ®macMat, œÑb, œÑbMac=0.619, Ks=1.0, œÑa=0.5, œÑaMac=0.5, œÑc=1.0, œÑcMac=2.0, œÑ‚Çö=2.0)

			Œ®m = RELATIONSHIPS_MAT(Œ®macMat, œÉ)
			œÉMac, Œ®mMac = RELATIONSHIPS_MAC(Œ®macMat)
			œÉ_Min=0.7
			œÉ_Max=4.0

			KosugiModel_œÉ_2_Tb = false
			KosugiModel_KŒ®‚ç∞ = "Œ®macMat"
			KosugiModel_Œ∏Œ®‚ç∞ = "Œ®macMat"

         Kunsat_Mat_Norm = kunsat.kg.KUNSAT_Œ∏Œ®Se(;Œ®‚ÇÅ=Œ®‚ÇÅ, Œ∏s, Œ∏sMacMat, Œ∏r, Œ®m, œÉ, Œ®mMac, Œ®macMat, œÉMac, Ks, œÑa, œÑb, œÑc, œÑ‚Çö, œÑaMac, œÑbMac, œÑcMac, œÉ_Min, œÉ_Max, KosugiModel_KŒ®‚ç∞=KosugiModel_KŒ®‚ç∞, KosugiModel_Œ∏Œ®‚ç∞=KosugiModel_Œ∏Œ®‚ç∞, KosugiModel_œÉ_2_Tb=KosugiModel_œÉ_2_Tb)


         KsMac, KsMat = kunsat.kg.FUNC_KsMac(;KosugiModel_œÉ_2_Tb, Ks, KosugiModel_KŒ®‚ç∞, Œ∏r, Œ∏s, Œ∏sMacMat, œÉ, œÉ_Max, œÉ_Min, œÉMac, œÑa, œÑaMac, œÑb, œÑbMac, œÑc, œÑcMac, œÑ‚Çö, Œ®m, Œ®macMat, Œ®mMac)

         Œ∏Dual = wrc.kg.Œ®_2_Œ∏(;Œ®‚ÇÅ=Œ®‚ÇÅ, Œ∏s, Œ∏sMacMat, Œ∏r, Œ®m, œÉ, Œ®mMac, Œ®macMat, œÉMac, KosugiModel_Œ∏Œ®‚ç∞=KosugiModel_Œ∏Œ®‚ç∞)
		return KsMat, Kunsat_Mat_Norm, Œ∏Dual
		end

		# Parameters
         Œ∏s = 0.4
         Œ∏r = 0.0
         Ks = 1.0
			œÑbMac = 0.619
			œÑb = 1.1

		#  For every œà
			Œ®_Min_Log = log10(0.0001)
			Œ®_Max_Log = log10(1500_00.0)
			Œ® = 10.0.^(collect(Œ®_Min_Log:0.0001:Œ®_Max_Log))
			N_Œ®  = length(Œ®)

			œÉ =  collect(range(0.7, stop=3., length=3))
			N_œÉ = length(œÉ)

			Texture = ["Sandy soils", "Silty soils", "Clay soils"] 

			Tb2 = collect(range(0.6, stop=1.5, length=4))
			N_Tb = length(Tb2)

			Œ®macMat = collect(range(30.0, stop=200.0, length=3))
			N_Œ®macMat = length(Œ®macMat)

			# Œ∏sMacMat_Œ∑ = collect(range(0.75, stop=1.0, length=4))
			# N_Œ∏sMacMat_Œ∑  = length(Œ∏sMacMat_Œ∑)
      	# Œ∏sMacMat = Œ∏s .* Œ∏sMacMat_Œ∑

			# KsMac = zeros(100)

		
		# FUNCTION Kunsat_Tb
         KunsatMat_Tb = zeros(N_Œ®, N_œÉ, N_Tb, N_Œ®macMat)
         KsMatrice    = zeros(N_œÉ, N_Tb, N_Œ®macMat)
			Œ∏œà = zeros(N_Œ®, N_œÉ, N_Tb, N_Œ®macMat)
			
			for (iiŒ®, iŒ®) in enumerate(Œ®), (iiœÉ, iœÉ) in enumerate(œÉ), (iiTb, iTb) in enumerate(Tb2), (iiŒ®macMat, iŒ®macMat) in enumerate(Œ®macMat)

			 	# KsMatrice[iiœÉ, iiTb, iiŒ®macMat], KunsatMat_Tb[iiŒ®, iiœÉ, iiTb, iiŒ®macMat], Œ∏œà[iiŒ®, iiœÉ, iiTb, iiŒ®macMat] = Œ∏œà_KUNSAT_MAT_Œ∑(;Œ®‚ÇÅ=iŒ®, œÉ=iœÉ, œÑb=iTb, œÑbMac=œÑbMac, Œ®macMat=iŒ®macMat)

				 KsMatrice[iiœÉ, iiTb, iiŒ®macMat], KunsatMat_Tb[iiŒ®, iiœÉ, iiTb, iiŒ®macMat], Œ∏œà[iiŒ®, iiœÉ, iiTb, iiŒ®macMat] = Œ∏œà_KUNSAT_MAT_Œ∑(;Œ®‚ÇÅ=iŒ®, œÉ=iœÉ, œÑb=iTb, œÑbMac=œÑbMac, Œ®macMat=iŒ®macMat)
			end

		# ================================================================
				# Plotting parameters
         ColourOption_No    = 1
         Linewidth          = 2
         height             = 200
         labelsize          = 20
         textcolor          = :blue
         textsize           = 20
         titlecolor         = :navyblue
         titlesize          = 18.0
         width              = height * 3.0
         xgridstyle         = :dash
         xgridvisible       = true
         xlabelSize         = 20
         xlabelpadding      = 5
         xminortickalign    = 1.0
         xminorticksvisible = true
         xtickalign         = 0.9 # 0 is inside and 1 is outside
         xticklabelrotation = œÄ / 4.0
         xticksize          = 10
         xticksmirrored     = false
         xtickwidt          = 0.5
         xtrimspine         = false
         ygridstyle         = :dash
         ygridvisible       = false
         ylabelpadding      = xlabelpadding
         ylabelsize         = xlabelSize
         yminortickalign    = xminortickalign
         yminorticksvisible = true
         ytickalign         = xtickalign
         yticksize          = xticksize
         yticksmirrored     = false
         ytickwidt          = xtickwidt
         ytrimspine         = false

			ColourOption = [:glasbey_hv_n256,:seaborn_bright,:seaborn_colorblind,:seaborn_dark,:seaborn_deep,:tab10,:tableau_10,:tol_bright]

			Colormap = cgrad(colorschemes[ColourOption[ColourOption_No]], size(colorschemes[ColourOption[ColourOption_No]]), categorical = true)

			Œ®ticks = [0, 50, 100, 500, 1000,5000,100_00, 500_00, 1000_00, 1500_00] # mm

			Œ®_Log = Array{Float64}(undef, N_Œ®)
				for iZ=1:N_Œ®
					Œ®_Log[iZ] = log1p(Œ®[iZ])
				end

		# Starting to plot	
			CairoMakie.activate!(type="svg", pt_per_unit=1)
			Fig =  Figure(figure_padding = 10; fonts = ( ; regular="CMU Serif"), backgroundcolor = :grey100) 

			Label(Fig[1, 1:N_œÉ, Top()], L"Lognormal bimodal $Kœà$_MacMat model", valign=:bottom, font=:bold, padding=(0, 0, 50, 0), color=:darkblue,  fontsize=titlesize*1.5)

			Axis_KunsatMat_Tb = []
			for (iiœÉ, iœÉ) in enumerate(œÉ)
				for(iiŒ®macMat, iŒ®macMat) in enumerate(Œ®macMat)

				if iiœÉ==1
					Label(Fig[iiœÉ, iiŒ®macMat, TopRight()], "($iiœÉ-$iiŒ®macMat)", fontsize=18, padding=(-50, 5, -100, 10), halign=:right, font=("CMU Serif"))
					else
						Label(Fig[iiœÉ, iiŒ®macMat, TopRight()], "($iiœÉ-$iiŒ®macMat)", fontsize=18, padding=(-50, 5, -50, 10), halign=:right, font=("CMU Serif"))
					end

					Axis_KunsatMat_Tb = Axis(Fig[iiœÉ, iiŒ®macMat], xlabel= L"$œà$ [kPa]", ylabel=L"$K(\psi)$ [L T ‚Åª¬π]", title="$(Texture[iiœÉ]) Œ®macMat=$(Int32(floor(iŒ®macMat, digits=0))) mm" ,  titlecolor=titlecolor, xticklabelrotation=xticklabelrotation, ylabelsize=ylabelsize, xlabelsize=xlabelSize, xticksize=xticksize, yticksize=yticksize, width=width, height=height, titlesize=titlesize,  xgridvisible=xgridvisible, ygridvisible=ygridvisible, xminorticksvisible=xminorticksvisible, yminorticksvisible=yminorticksvisible, xtickwidth=xtickwidt, ytickwidth=ytickwidt, xtickalign=xtickalign, ytickalign=ytickalign, xticksmirrored=xticksmirrored, yticksmirrored=yticksmirrored, xtrimspine=xtrimspine,  ytrimspine=ytrimspine, xgridstyle=xgridstyle, ygridstyle=ygridstyle, yminorticks=IntervalsBetween(5), xlabelpadding=xlabelpadding, ylabelpadding=ylabelpadding, xminortickalign=xminortickalign, yminortickalign=yminortickalign, titlefont = "CMU Serif")

						Axis_KunsatMat_Tb.xticks = (log1p.(Œ®ticks), string.(cst.Mm_2_kPa .* Œ®ticks))

						if iiœÉ < N_œÉ
							hidexdecorations!(Axis_KunsatMat_Tb, ticks=false, grid=false)
						end

						if iiŒ®macMat > 1
							hideydecorations!(Axis_KunsatMat_Tb, ticks=false, grid=false)
						end

						for (iiTb, iTb) in enumerate(Tb2)
							lines!(Fig[iiœÉ, iiŒ®macMat], Œ®_Log, KunsatMat_Tb[:, iiœÉ, iiTb, iiŒ®macMat], linewidth=Linewidth, color=Colormap[iiTb], label="œÉ =$(floor(œÉ[iiœÉ], digits=2)) œÑ·µ¶ =$(floor(iTb, digits=2))")

							# lines!(Fig[iiœÉ, iiŒ®macMat], Œ®_Log, Œ∏œà[:, iiœÉ, iiTb, iiŒ®macMat], linewidth=Linewidth, color=Colormap[iiTb], label="œÉ =$(floor(œÉ[iiœÉ], digits=2)) Tb=$(floor(iTb, digits=2))")

							lines!(Axis_KunsatMat_Tb,[Point(log1p(0.0), KsMatrice[iiœÉ, iiTb, iiŒ®macMat] ), Point(log1p(Œ®macMat[iiŒ®macMat]), KsMatrice[iiœÉ, iiTb, iiŒ®macMat])], color=Colormap[iiTb], linewidth=Linewidth/2.0, linestyle=:dash)
						end

						lines!(Axis_KunsatMat_Tb,[Point(log1p(Œ®macMat[iiŒ®macMat]), 0.0), Point(log1p(Œ®macMat[iiŒ®macMat]), 1.0)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)
						text!(log1p(Œ®macMat[iiŒ®macMat]), 0, text =L"œà_{MacMat}", align=(:left,:bottom), rotation = œÄ/2,  color=textcolor, fontsize=textsize)
						text!(log1p(0),  0.5, text =L"K_{sMacMat}", align=(:left,:bottom), color=textcolor, fontsize=textsize, rotation = œÄ/2)
	
				end # for(iiŒ®macMat, iŒ®macMat) in enumerate(Œ®macMat)

				Legend(Fig[iiœÉ,N_Œ®macMat+1], Axis_KunsatMat_Tb, framecolor=(:grey, 0.5), labelsize=labelsize, valign=:top, padding=5, tellheight=true, tellwidt=true, nbanks=1, backgroundcolor=:gray100)
			end # for (iiœÉ, iœÉ) in enumerate(œÉ)

			# General
				resize_to_layout!(Fig)
				trim!(Fig.layout)
				colgap!(Fig.layout, 20)
				rowgap!(Fig.layout, 20)

				Path = raw"D:\TEMP\Plots\MacroKunsat_Tb.svg"
				save(Path, Fig)
				display(Fig)
		
	return nothing
	end  # function: name
	# ------------------------------------------------------------------



	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	#		FUNCTION : PLOTTING_Kh_MODELS
	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	function PLOTTING_Kh_MODELS()

		function RELATIONSHIPS_MAC(Œ®macMat; PœÉ_Mac=2)
			œÉMac    = hydroRelation.FUNC_Œ®macMat_2_œÉMac(;Œ®macMat, PœÉ_Mac)
			Œ®mMac   = hydroRelation.FUNC_Œ®macMat_2_Œ®mMac(;Œ®macMat=Œ®macMat)
		return œÉMac, Œ®mMac
		end  # function: RELATIONSHIPS_MAC

		function RELATIONSHIPS_MAT(Œ®macMat, œÉ; PœÉ=3)
			Œ®macMat‚ÇÇ = exp((log(‚àöŒ®macMat) + log(Œ®macMat)) * 0.5)
			Œ®m  = hydroRelation.FUNC_œÉ_2_Œ®m(;Œ®macMat=Œ®macMat‚ÇÇ, œÉ, PœÉ=PœÉ, üéè_Min=false)
		return Œ®m
		end

		function Œ∏œà_KUNSAT_MAT_Œ∑(;Œ®‚ÇÅ=Œ®‚ÇÅ, Œ∏s=0.4, Œ∏sMacMat=0.35, Œ∏r=0.0, œÉ, Œ®macMat, œÑb=1.5, Ks=1.0, œÑa=0.5, œÑaMac=0.5, œÑc=1.0, œÑcMac=2.0, œÑ‚Çö=2.0)
			Œ®m = RELATIONSHIPS_MAT(Œ®macMat, œÉ)
			œÉMac, Œ®mMac = RELATIONSHIPS_MAC(Œ®macMat)
			œÉ_Min=0.7
			œÉ_Max=4.0
         
         Kunsat_Mat_Norm = kunsat.kg.KUNSAT_Œ∏Œ®Se(;Œ®‚ÇÅ=Œ®‚ÇÅ, Œ∏s, Œ∏sMacMat, Œ∏r, Œ®m, œÉ, Œ®mMac, Œ®macMat, œÉMac, Ks, œÑa=0.5, œÑb=1.103, œÑc=1.0, œÑ‚Çö=2.9, œÑaMac=0.5, œÑbMac=0.619, œÑcMac=2.0, œÉ_Min, œÉ_Max, KosugiModel_KŒ®‚ç∞="Œ®macMat", KosugiModel_Œ∏Œ®‚ç∞="Œ®macMat", KosugiModel_œÉ_2_Tb=false)

         KsMac, KsMat    = kunsat.kg.FUNC_KsMac(;KosugiModel_œÉ_2_Tb=false, Ks, KosugiModel_KŒ®‚ç∞="Œ®macMat", Œ∏r, Œ∏s, Œ∏sMacMat, œÉ, œÉ_Max, œÉ_Min, œÉMac, œÑa, œÑaMac, œÑb=1.103, œÑbMac=0.61, œÑc, œÑcMac, œÑ‚Çö, Œ®m, Œ®macMat, Œ®mMac)

         Kunsat_Mat_Trad = kunsat.kg.KUNSAT_Œ∏Œ®Se(;Œ®‚ÇÅ=Œ®‚ÇÅ, Œ∏s, Œ∏sMacMat, Œ∏r, Œ®m, œÉ, Œ®mMac, Œ®macMat, œÉMac, Ks, œÑa=0.5, œÑb=1.587, œÑc=1.01, œÑ‚Çö, œÑaMac=0.5, œÑbMac=0.008, œÑcMac=1.01, œÉ_Min, œÉ_Max, KosugiModel_KŒ®‚ç∞="Mualem", KosugiModel_Œ∏Œ®‚ç∞="Traditional", KosugiModel_œÉ_2_Tb=false)
	


         Œ∏Dual           = wrc.kg.Œ®_2_Œ∏(;Œ®‚ÇÅ=Œ®‚ÇÅ, Œ∏s, Œ∏sMacMat, Œ∏r, Œ®m, œÉ, Œ®mMac, Œ®macMat, œÉMac, KosugiModel_Œ∏Œ®‚ç∞="Œ®macMat")
		return KsMat, Kunsat_Mat_Norm,  Kunsat_Mat_Trad, Œ∏Dual
		end

		# Parameters
         Œ∏s = 1.0
         Œ∏r = 0.0
         Ks = 1.0
			œÑbMac = 0.8

		#  For every œà
			Œ®_Min_Log = log10(0.0001)
			Œ®_Max_Log = log10(1500_00.0)
			Œ® = 10.0.^(collect(Œ®_Min_Log:0.0001:Œ®_Max_Log))
			N_Œ®  = length(Œ®)

			œÉ =  collect(range(0.75, stop=3.5, length=3))
			N_œÉ = length(œÉ)

			Texture = ["Sandy soils", "Silty soils", "Clay soils"] 

	

			Œ®macMat = collect(range(30.0, stop=200.0, length=3))
			N_Œ®macMat = length(Œ®macMat)

			# Œ∏sMacMat_Œ∑ = collect(range(0.75, stop=1.0, length=4))
			# N_Œ∏sMacMat_Œ∑  = length(Œ∏sMacMat_Œ∑)
      	# Œ∏sMacMat = Œ∏s .* Œ∏sMacMat_Œ∑

			# KsMac = zeros(100)

		
		# FUNCTION Kunsat_Tb
         KunsatMat_Tb = zeros(N_Œ®, N_œÉ, N_Œ®macMat)
			Kunsat_Mat_Tradition = zeros(N_Œ®, N_œÉ, N_Œ®macMat)
         KsMatrice    = zeros(N_œÉ, N_Œ®macMat)
			Œ∏œà = zeros(N_Œ®, N_œÉ, N_Œ®macMat)
			
			for (iiŒ®, iŒ®) in enumerate(Œ®), (iiœÉ, iœÉ) in enumerate(œÉ), (iiŒ®macMat, iŒ®macMat) in enumerate(Œ®macMat)

			 	KsMatrice[iiœÉ, iiŒ®macMat], KunsatMat_Tb[iiŒ®, iiœÉ, iiŒ®macMat], Kunsat_Mat_Tradition[iiŒ®, iiœÉ, iiŒ®macMat], Œ∏œà[iiŒ®, iiœÉ, iiŒ®macMat] = Œ∏œà_KUNSAT_MAT_Œ∑(;Œ®‚ÇÅ=iŒ®, œÉ=iœÉ, Œ®macMat=iŒ®macMat)

			end

		# ================================================================
				# Plotting parameters
         ColourOption_No    = 1
         Linewidth          = 2
         height             = 200
         labelsize          = 20
         textcolor          = :blue
         textsize           = 20
         titlecolor         = :navyblue
         titlesize          = 18.0
         width              = height * 3.0
         xgridstyle         = :dash
         xgridvisible       = true
         xlabelSize         = 20
         xlabelpadding      = 5
         xminortickalign    = 1.0
         xminorticksvisible = true
         xtickalign         = 0.9 # 0 is inside and 1 is outside
         xticklabelrotation = œÄ / 4.0
         xticksize          = 10
         xticksmirrored     = false
         xtickwidt          = 0.5
         xtrimspine         = false
         ygridstyle         = :dash
         ygridvisible       = false
         ylabelpadding      = xlabelpadding
         ylabelsize         = xlabelSize
         yminortickalign    = xminortickalign
         yminorticksvisible = true
         ytickalign         = xtickalign
         yticksize          = xticksize
         yticksmirrored     = false
         ytickwidt          = xtickwidt
         ytrimspine         = false


			ColourOption = [:glasbey_hv_n256,:seaborn_bright,:seaborn_colorblind,:seaborn_dark,:seaborn_deep,:tab10,:tableau_10,:tol_bright]

			Colormap = cgrad(colorschemes[ColourOption[ColourOption_No]], size(colorschemes[ColourOption[ColourOption_No]]), categorical = true)

			Œ®ticks = [0, 50, 100, 500, 1000,5000,100_00, 500_00, 1000_00, 1500_00] # mm

			Œ®_Log = Array{Float64}(undef, N_Œ®)
				for iZ=1:N_Œ®
					Œ®_Log[iZ] = log1p(Œ®[iZ])
				end

		# Starting to plot	
			CairoMakie.activate!(type="svg", pt_per_unit=1)
			Fig =  Figure(figure_padding = 10; fonts = ( ; regular="CMU Serif"), backgroundcolor = :grey99) 

			Label(Fig[1, 1:N_œÉ, Top()], L"Lognormal bimodal $K(\psi)$ Models", valign=:bottom, font=:bold, padding=(0, 0, 50, 0), color=:darkblue,  fontsize=titlesize*1.5)

			Axis_KunsatMat_Tb = []
			for (iiœÉ, iœÉ) in enumerate(œÉ)
				for(iiŒ®macMat, iŒ®macMat) in enumerate(Œ®macMat)

				if iiœÉ==1
					Label(Fig[iiœÉ, iiŒ®macMat, TopRight()], "($iiœÉ-$iiŒ®macMat)", fontsize=18, padding=(-50, 5, -100, 10), halign=:right, font=("CMU Serif"))
					else
						Label(Fig[iiœÉ, iiŒ®macMat, TopRight()], "($iiœÉ-$iiŒ®macMat)", fontsize=18, padding=(-50, 5, -50, 10), halign=:right, font=("CMU Serif"))
					end

					Axis_KunsatMat_Tb = Axis(Fig[iiœÉ, iiŒ®macMat], xlabel= L"$œà$ [kPa]", ylabel=L"$K(\psi)$ [L T ‚Åª¬π]", title="$(Texture[iiœÉ]) Œ®macMat=$(Int32(floor(iŒ®macMat, digits=0))) mm" ,  titlecolor=titlecolor, xticklabelrotation=xticklabelrotation, ylabelsize=ylabelsize, xlabelsize=xlabelSize, xticksize=xticksize, yticksize=yticksize, width=width, height=height, titlesize=titlesize,  xgridvisible=xgridvisible, ygridvisible=ygridvisible, xminorticksvisible=xminorticksvisible, yminorticksvisible=yminorticksvisible, xtickwidth=xtickwidt, ytickwidth=ytickwidt, xtickalign=xtickalign, ytickalign=ytickalign, xticksmirrored=xticksmirrored, yticksmirrored=yticksmirrored, xtrimspine=xtrimspine,  ytrimspine=ytrimspine, xgridstyle=xgridstyle, ygridstyle=ygridstyle, yminorticks=IntervalsBetween(5), xlabelpadding=xlabelpadding, ylabelpadding=ylabelpadding, xminortickalign=xminortickalign, yminortickalign=yminortickalign, titlefont = "CMU Serif")

						Axis_KunsatMat_Tb.xticks = (log1p.(Œ®ticks), string.(cst.Mm_2_kPa .* Œ®ticks))

						if iiœÉ < N_œÉ
							hidexdecorations!(Axis_KunsatMat_Tb, ticks=false, grid=false)
						end

						if iiŒ®macMat > 1
							hideydecorations!(Axis_KunsatMat_Tb, ticks=false, grid=false)
						end


						lines!(Fig[iiœÉ, iiŒ®macMat], Œ®_Log, KunsatMat_Tb[:, iiœÉ, iiŒ®macMat], linewidth=Linewidth, color=:darkblue, label=label="KŒ®_MacMat, œÉ =$(floor(œÉ[iiœÉ], digits=2))")

						lines!(Fig[iiœÉ, iiŒ®macMat], Œ®_Log, Kunsat_Mat_Tradition[:, iiœÉ, iiŒ®macMat], linewidth=Linewidth, color=:aquamarine4,  label="KŒ®_Mualem, œÉ =$(floor(œÉ[iiœÉ], digits=2))", linestyle=:dash)

						lines!(Axis_KunsatMat_Tb,[Point(log1p(0.0), KsMatrice[iiœÉ, iiŒ®macMat] ), Point(log1p(Œ®macMat[iiŒ®macMat]), KsMatrice[iiœÉ, iiŒ®macMat])], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)

						lines!(Axis_KunsatMat_Tb,[Point(log1p(Œ®macMat[iiŒ®macMat]), 0.0), Point(log1p(Œ®macMat[iiŒ®macMat]), 1.0)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)

						text!(log1p(Œ®macMat[iiŒ®macMat]), 0, text =L"œà_{MacMat}", align=(:left,:bottom), rotation = œÄ/2,  color=textcolor, fontsize=textsize)

						text!(log1p(0),  KsMatrice[iiœÉ, iiŒ®macMat], text =L"K_{sMacMat}", align=(:left,:bottom), color=textcolor, fontsize=textsize, rotation =0)
	
				end # for(iiŒ®macMat, iŒ®macMat) in enumerate(Œ®macMat)

				Legend(Fig[iiœÉ,N_Œ®macMat+1], Axis_KunsatMat_Tb, framecolor=(:grey, 0.5), labelsize=labelsize, valign=:top, padding=5, tellheight=true, tellwidt=true, nbanks=1, backgroundcolor=:gray100)
			end # for (iiœÉ, iœÉ) in enumerate(œÉ)

			# General
				resize_to_layout!(Fig)
				trim!(Fig.layout)
				colgap!(Fig.layout, 20)
				rowgap!(Fig.layout, 20)

				Path = raw"D:\TEMP\Plots\MacroKunsat.svg"
				save(Path, Fig)
				display(Fig)
		
	return nothing
	end  # function: name
	# ------------------------------------------------------------------



	
	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	#		FUNCTION : PLOTTING_Œ∏œà_MACRO
	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	function PLOTTING_Œ∏œà_MACRO()

		function RELATIONSHIPS_MAC(Œ®macMat; PœÉ_Mac=2.0)
			œÉMac    = hydroRelation.FUNC_Œ®macMat_2_œÉMac(;Œ®macMat, PœÉ_Mac)
			Œ®mMac   = hydroRelation.FUNC_Œ®macMat_2_Œ®mMac(;Œ®macMat=Œ®macMat)
		return œÉMac, Œ®mMac
		end  # function: RELATIONSHIPS_MAC

		function RELATIONSHIPS_MAT(Œ®macMat, œÉ; PœÉ=3)
			Œ®macMat‚ÇÇ = exp((log(‚àöŒ®macMat) + log(Œ®macMat)) * 0.5)
			Œ®m  = hydroRelation.FUNC_œÉ_2_Œ®m(;Œ®macMat=Œ®macMat‚ÇÇ, œÉ, PœÉ=PœÉ, üéè_Min=false)
		return Œ®m
		end


		function Œ∏œà_Œ∑(;Œ®‚ÇÅ=Œ®‚ÇÅ, Œ∏s=0.4, Œ∏sMacMat=0.35, Œ∏r=0.0, œÉ, Œ®macMat, œÑb,  œÑbMac)
         Œ®m          = RELATIONSHIPS_MAT(Œ®macMat, œÉ)
         œÉMac, Œ®mMac = RELATIONSHIPS_MAC(Œ®macMat)

         Œ∏Dual_Macro       = wrc.kg.Œ®_2_Œ∏(;Œ®‚ÇÅ=Œ®‚ÇÅ, Œ∏s, Œ∏sMacMat, Œ∏r, Œ®m, œÉ, Œ®mMac, Œ®macMat, œÉMac, KosugiModel_Œ∏Œ®‚ç∞="Œ®macMat")

			Œ∏Dual_Trad       = wrc.kg.Œ®_2_Œ∏(;Œ®‚ÇÅ=Œ®‚ÇÅ, Œ∏s, Œ∏sMacMat, Œ∏r, Œ®m, œÉ, Œ®mMac, Œ®macMat, œÉMac, KosugiModel_Œ∏Œ®‚ç∞="Traditional")
		return Œ∏Dual_Macro, Œ∏Dual_Trad, Œ∏s, Œ∏sMacMat
		end


		#  For every œà
			Œ®_Min_Log = log10(0.0001)
			Œ®_Max_Log = log10(1500_00.0)
			Œ® = 10.0.^(collect(Œ®_Min_Log:0.0001:Œ®_Max_Log))
			N_Œ®  = length(Œ®)

			œÉ =  collect(range(0.7, stop=3., length=3))
			N_œÉ = length(œÉ)

			Texture = ["Sandy soils", "Silty soils", "Clay soils"] 

			Tb2 = collect(range(0.0, stop=1.0, length=5))
			N_Tb = length(Tb2)

			Œ®macMat = collect(range(30.0, stop=200.0, length=3))
			N_Œ®macMat = length(Œ®macMat)

			Œ∏œà_Macro = zeros(N_Œ®, N_œÉ, N_Tb, N_Œ®macMat)
			Œ∏œà_Trad = zeros(N_Œ®, N_œÉ, N_Tb, N_Œ®macMat)
			Œ∏s = 0.0
			Œ∏sMacMat = 0.0
			
			for (iiŒ®, iŒ®) in enumerate(Œ®), (iiœÉ, iœÉ) in enumerate(œÉ), (iiTb, iTb) in enumerate(Tb2), (iiŒ®macMat, iŒ®macMat) in enumerate(Œ®macMat)
			 	Œ∏œà_Macro[iiŒ®, iiœÉ, iiTb, iiŒ®macMat], Œ∏œà_Trad[iiŒ®, iiœÉ, iiTb, iiŒ®macMat], Œ∏s, Œ∏sMacMat = Œ∏œà_Œ∑(;Œ®‚ÇÅ=iŒ®, œÉ=iœÉ, œÑb=iTb, œÑbMac=iTb, Œ®macMat=iŒ®macMat)
			end

		# ================================================================
				# Plotting parameters
         ColourOption_No    = 1
         Linewidth          = 2
         height             = 200
         labelsize          = 15
         textcolor          = :blue
         textsize           = 20
         titlecolor         = :navyblue
         titlesize          = 18.0
         width              = height * 3.0
         xgridstyle         = :dash
         xgridvisible       = true
         xlabelSize         = 20
         xlabelpadding      = 5
         xminortickalign    = 1.0
         xminorticksvisible = true
         xtickalign         = 0.9 # 0 is inside and 1 is outside
         xticklabelrotation = œÄ / 4.0
         xticksize          = 10
         xticksmirrored     = false
         xtickwidt          = 0.5
         xtrimspine         = false
         ygridstyle         = :dash
         ygridvisible       = false
         ylabelpadding      = xlabelpadding
         ylabelsize         = xlabelSize
         yminortickalign    = xminortickalign
         yminorticksvisible = true
         ytickalign         = xtickalign
         yticksize          = xticksize
         yticksmirrored     = false
         ytickwidt          = xtickwidt
         ytrimspine         = false

			ColourOption = [:glasbey_hv_n256,:seaborn_bright,:seaborn_colorblind,:seaborn_dark,:seaborn_deep,:tab10,:tableau_10,:tol_bright]

			Colormap = cgrad(colorschemes[ColourOption[ColourOption_No]], size(colorschemes[ColourOption[ColourOption_No]]), categorical=true)

			Œ®ticks = [0, 50, 100, 500, 1000,5000,100_00, 500_00, 1000_00, 1500_00] # mm

			Œ®_Log = Array{Float64}(undef, N_Œ®)
				for iZ=1:N_Œ®
					Œ®_Log[iZ] = log1p(Œ®[iZ])
				end

		# Starting to plot	
			CairoMakie.activate!(type="svg", pt_per_unit=1)
			Fig =  Figure(figure_padding = 10; fonts = ( ; regular="CMU Serif"), backgroundcolor = :gray99) 

			Label(Fig[1, 1:N_œÉ, Top()], L"Lognormal bimodal $Œ∏(\psi)$ models", valign=:bottom, font=:bold, padding=(0, 0, 50, 0), color=:darkblue,  fontsize=titlesize*1.5)

			Axis_Œ∏œà = []
			for (iiœÉ, iœÉ) in enumerate(œÉ)
				for(iiŒ®macMat, iŒ®macMat) in enumerate(Œ®macMat)

				if iiœÉ==1
					Label(Fig[iiœÉ, iiŒ®macMat, TopRight()], "($iiœÉ-$iiŒ®macMat)", fontsize=18,  padding=(-50, 5, -100, 10), halign=:right,  font=("CMU Serif"))
					else
						Label(Fig[iiœÉ, iiŒ®macMat, TopRight()], "($iiœÉ-$iiŒ®macMat)", fontsize=18, padding=(-50, 5, -50, 10), halign=:right,  font="CMU Serif")

					end
					Axis_Œ∏œà = Axis(Fig[iiœÉ, iiŒ®macMat], xlabel= L"$œà$ [kPa]", ylabel=L"$\theta(\psi)$ [L¬≥ L‚Åª¬≥]", title="$(Texture[iiœÉ]) Œ®macMat = $(Int32(floor(iŒ®macMat, digits=0))) mm" ,  titlecolor=titlecolor, xticklabelrotation=xticklabelrotation, ylabelsize=ylabelsize, xlabelsize=xlabelSize, xticksize=xticksize, yticksize=yticksize, width=width, height=height, titlesize=titlesize,  xgridvisible=xgridvisible, ygridvisible=ygridvisible, xminorticksvisible=xminorticksvisible, yminorticksvisible=yminorticksvisible, xtickwidth=xtickwidt, ytickwidth=ytickwidt, xtickalign=xtickalign, ytickalign=ytickalign, xticksmirrored=xticksmirrored, yticksmirrored=yticksmirrored, xtrimspine=xtrimspine,  ytrimspine=ytrimspine, xgridstyle=xgridstyle, ygridstyle=ygridstyle, yminorticks=IntervalsBetween(5), xlabelpadding=xlabelpadding, ylabelpadding=ylabelpadding, xminortickalign=xminortickalign, yminortickalign=yminortickalign,  titlefont = "CMU Serif")

						Axis_Œ∏œà.xticks = (log1p.(Œ®ticks), string.(cst.Mm_2_kPa .* Œ®ticks))

						if iiœÉ < N_œÉ
							hidexdecorations!(Axis_Œ∏œà, ticks=false, grid=false)
						end

						if iiŒ®macMat > 1
							hideydecorations!(Axis_Œ∏œà, ticks=false, grid=false)
						end

						# for (iiTb, iTb) in enumerate(Tb2)
							lines!(Fig[iiœÉ, iiŒ®macMat], Œ®_Log, Œ∏œà_Macro[:, iiœÉ, 1, iiŒ®macMat], linewidth=Linewidth, color=:darkblue, label="Œ∏Œ®_MacMat, œÉ =$(floor(œÉ[iiœÉ], digits=2))")
							lines!(Fig[iiœÉ, iiŒ®macMat], Œ®_Log, Œ∏œà_Trad[:, iiœÉ, 1, iiŒ®macMat], linewidth=Linewidth, color=:aquamarine4, label="Œ∏Œ®_Trad, œÉ =$(floor(œÉ[iiœÉ], digits=2))", linestyle=:dash)
							lines!(Axis_Œ∏œà,[Point(log1p(Œ®macMat[iiŒ®macMat]),0), Point(log1p(Œ®macMat[iiŒ®macMat]), Œ∏s)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)
							lines!(Axis_Œ∏œà,[Point(log1p(0), Œ∏sMacMat), Point(log1p(Œ®macMat[iiŒ®macMat]), Œ∏sMacMat)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)
							lines!(Axis_Œ∏œà,[Point(log1p(0), Œ∏s), Point(log1p(Œ®macMat[iiŒ®macMat]), Œ∏s)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)
						# end

						text!(log1p(0), Œ∏sMacMat, text =L"Œ∏_{sMacMat}", align=(:left,:top),  color=textcolor, fontsize=textsize)
						text!(log1p(0), Œ∏s, text =L"Œ∏_{s}", align=(:left,:top),  color=textcolor, fontsize=textsize)
						text!(log1p(Œ®macMat[iiŒ®macMat]), 0, text =L"œà_{MacMat}", align=(:left,:bottom), rotation = œÄ/2,  color=textcolor, fontsize=textsize)


		
				# 		lines!(Axis_Œ∏œà,[Point(log1p(Œ®macMat[iiŒ®macMat]), 0.0), Point(log1p(Œ®macMat[iiŒ®macMat]), 1.0)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)
	
				end # for(iiŒ®macMat, iŒ®macMat) in enumerate(Œ®macMat)

				Legend(Fig[iiœÉ,N_Œ®macMat+1], Axis_Œ∏œà, framecolor=(:grey, 0.5), labelsize=labelsize, valign=:top, padding=5, tellheight=true, tellwidt=true, nbanks=1, backgroundcolor=:gray100)
			end # for (iiœÉ, iœÉ) in enumerate(œÉ)

			# General
				resize_to_layout!(Fig)
				trim!(Fig.layout)
				colgap!(Fig.layout, 10)
				rowgap!(Fig.layout, 10)

				Path = raw"D:\TEMP\Plots\MacroThetaH.svg"
				save(Path, Fig)
				display(Fig)
		
	return nothing
	end  # function: PLOTTING_Œ∏œà_MACRO
	# ------------------------------------------------------------------


	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	#		FUNCTION : PLOT_œÉ_2_œÑb
	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		function PLOT_œÉ_2_œÑb(;œÉ_Min=0.7, œÉ_Max=4.0, œÑ‚Çö=1.885, œÑb=1.505)
			Path_Data = raw"D:\MAIN\PUB\MANUSC\MatrixMacroModel\Data\ModelData\Sigma_2_TauB.csv"

			Data = CSV.read(Path_Data, DataFrame, header=true)
			œÉ_Obs = Data.œÉ
			œÑb_Obs = Data.œÑb
			N = length(œÉ_Obs)

			function œÉ_2_œÑb(œÉ, œÉ_Max, œÉ_Min, œÑb, œÑ‚Çö)
				Xa  = 0.0
				Ya  = œÑb
				Xb  = 1.0
				Yb  = 0.6
				B   = Yb - Xb * (Yb - Ya) / (Xb - Xa)
				œÉ_Œ∑ = min(max((œÉ - œÉ_Min) / (œÉ_Max - œÉ_Min), 0.0), 1.0)
			return max((œÉ_Œ∑ ^ œÑ‚Çö) * (Yb - Ya) / (Xb - Xa) + B, 0.0)
			end

			œÉ_Model = collect(range(œÉ_Min, stop=œÉ_Max, length=1000))
			œÑb_Mod = zeros(length(œÉ_Model))


			for (i, iiœÉ) ‚àà enumerate(œÉ_Model)
				œÑb_Mod[i] = œÉ_2_œÑb(iiœÉ, œÉ_Max, œÉ_Min, œÑb, œÑ‚Çö)
			end

# ================================================================
				# Plotting parameters
				ColourOption_No    = 1
				Linewidth          = 2
				height             = 200
				labelsize          = 15
				Markersize         = 8
				textcolor          = :blue
				textsize           = 20
				titlecolor         = :navyblue
				titlesize          = 18.0
				width              = height * 3.0
				xgridstyle         = :dash
				xgridvisible       = true
				xlabelSize         = 20
				xlabelpadding      = 5
				xminortickalign    = 1.0
				xminorticksvisible = true
				xtickalign         = 0.9 # 0 is inside and 1 is outside
				xticklabelrotation = 0
				xticksize          = 10
				xticksmirrored     = false
				xtickwidt          = 0.5
				xtrimspine         = false
				ygridstyle         = :dash
				ygridvisible       = false
				ylabelpadding      = xlabelpadding
				ylabelsize         = xlabelSize
				yminortickalign    = xminortickalign
				yminorticksvisible = true
				ytickalign         = xtickalign
				yticksize          = xticksize
				yticksmirrored     = false
				ytickwidt          = xtickwidt
				ytrimspine         = false
	
				ColourOption = [:glasbey_hv_n256,:seaborn_bright,:seaborn_colorblind,:seaborn_dark,:seaborn_deep,:tab10,:tableau_10,:tol_bright]
	
				Colormap = cgrad(colorschemes[ColourOption[ColourOption_No]], size(colorschemes[ColourOption[ColourOption_No]]), categorical=true)
				# Starting to plot	

			CairoMakie.activate!(type="svg", pt_per_unit=1)
			Fig =  Figure(figure_padding = 10; fonts = ( ; regular="CMU Serif"), backgroundcolor = :grey100) 

			Axis_A = Axis(Fig[1, 1], xlabel= L"$\sigma$ [-]", ylabel=L"$\tau_{B}$ [-]", title= "" ,  titlecolor=titlecolor, xticklabelrotation=xticklabelrotation, ylabelsize=ylabelsize, xlabelsize=xlabelSize, xticksize=xticksize, yticksize=yticksize, width=width, height=height, titlesize=titlesize,  xgridvisible=xgridvisible, ygridvisible=ygridvisible, xminorticksvisible=xminorticksvisible, yminorticksvisible=yminorticksvisible, xtickwidth=xtickwidt, ytickwidth=ytickwidt, xtickalign=xtickalign, ytickalign=ytickalign, xticksmirrored=xticksmirrored, yticksmirrored=yticksmirrored, xtrimspine=xtrimspine,  ytrimspine=ytrimspine, xgridstyle=xgridstyle, ygridstyle=ygridstyle, xminorticks=IntervalsBetween(5), yminorticks=IntervalsBetween(5), xlabelpadding=xlabelpadding, ylabelpadding=ylabelpadding, xminortickalign=xminortickalign, yminortickalign=yminortickalign,  titlefont = "CMU Serif")

			xlims!(Axis_A, œÉ_Min, œÉ_Max)
			ylims!(Axis_A, 0., 1.8)
			
			scatter!(Fig[1,1], œÉ_Obs[1:end-60], œÑb_Obs[1:end-60], linewidth=Linewidth, markersize=Markersize, marker = '‚óè', strokewidth=1, strokecolor=:deepskyblue3,color=:transparent, label="NonPumice")

			scatter!(Fig[1,1], œÉ_Obs[end-59:end], œÑb_Obs[end-59:end], linewidth=Linewidth, markersize=Markersize, marker = '‚óè', strokewidth=1, strokecolor=:deepskyblue3, label="Pumice")

			lines!(Fig[1,1], œÉ_Model, œÑb_Mod, linewidth=Linewidth*1.5, color=:red, linestyle=:dash, label = L"\sigma (\tau _{B})")

			Legend(Fig[2,1:2], Axis_A, framecolor=(:grey, 0.5), labelsize=labelsize, valign=:top, padding=5, tellheight=true, tellwidt=true, nbanks=3, backgroundcolor=:gray100)

			# General
				resize_to_layout!(Fig)
				trim!(Fig.layout)
				colgap!(Fig.layout, 10)
				rowgap!(Fig.layout, 10)

				Path = raw"D:\TEMP\Plots\œÉ_2_œÑb.svg"
				save(Path, Fig)
				display(Fig)

		return nothing
		end
	# ------------------------------------------------------------------

	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	#		FUNCTION : DENSITY_PLOT
	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	function DENSITY_PLOT()
		Path_Data = raw"D:\MAIN\PUB\MANUSC\MatrixMacroModel\Data\ModelData\Macro_Output.csv"

		Data = CSV.read(Path_Data, DataFrame, header=true)
		Œ∏_Macro = Data.Macro_Theta
		K_Macro = Data.Macro_K
		œÉ = Data.œÉ
		N = length(œÉ)


		# ================================================================
				# Plotting parameters
				ColourOption_No    = 1
				Linewidth          = 2
				height             = 200
				labelsize          = 15
				Markersize         = 8
				textcolor          = :blue
				textsize           = 20
				titlecolor         = :navyblue
				titlesize          = 18.0
				width              = height * 3.0
				xgridstyle         = :dash
				xgridvisible       = true
				xlabelSize         = 20
				xlabelpadding      = 5
				xminortickalign    = 1.0
				xminorticksvisible = true
				xtickalign         = 0.9 # 0 is inside and 1 is outside
				xticklabelrotation = 0
				xticksize          = 10
				xticksmirrored     = false
				xtickwidt          = 0.5
				xtrimspine         = false
				ygridstyle         = :dash
				ygridvisible       = false
				ylabelpadding      = xlabelpadding
				ylabelsize         = xlabelSize
				yminortickalign    = xminortickalign
				yminorticksvisible = true
				ytickalign         = xtickalign
				yticksize          = xticksize
				yticksmirrored     = false
				ytickwidt          = xtickwidt
				ytrimspine         = false

		CairoMakie.activate!(type="svg", pt_per_unit=1)
		Fig =  Figure(figure_padding = 10; fonts = ( ; regular="CMU Serif"), backgroundcolor = :grey100)

		colors1 = categorical_colors(:Hiroshige, length(2))
		
		Axis_Œ∏macro = Axis(Fig[1, 1], xlabel= L"$Œ∏_{Mac_%}$", ylabel=L"$Density$ [-]", title= "" ,  titlecolor=titlecolor, xticklabelrotation=xticklabelrotation, ylabelsize=ylabelsize, xlabelsize=xlabelSize, xticksize=xticksize, yticksize=yticksize, width=width, height=height, titlesize=titlesize,  xgridvisible=xgridvisible, ygridvisible=ygridvisible, xminorticksvisible=xminorticksvisible, yminorticksvisible=yminorticksvisible, xtickwidth=xtickwidt, ytickwidth=ytickwidt, xtickalign=xtickalign, ytickalign=ytickalign, xticksmirrored=xticksmirrored, yticksmirrored=yticksmirrored, xtrimspine=xtrimspine,  ytrimspine=ytrimspine, xgridstyle=xgridstyle, ygridstyle=ygridstyle, xminorticks=IntervalsBetween(5), yminorticks=IntervalsBetween(5), xlabelpadding=xlabelpadding, ylabelpadding=ylabelpadding, xminortickalign=xminortickalign, yminortickalign=yminortickalign,  titlefont = "CMU Serif")

			xlims!(Axis_Œ∏macro, 0, 0.4)

			Label(Fig[1, 1, TopLeft()], "(A)", fontsize=18, padding=(0, -40, -30, 10), halign=:right, font=("CMU Serif"), color=:midnightblue)

			density!(Axis_Œ∏macro, Œ∏_Macro[end-60:end],  label="Pumice", color =:lightsalmon, strokewidth = 1.25, strokecolour=:yellow, npoints=500000)

			density!(Axis_Œ∏macro, Œ∏_Macro[1:end-61], label="NonPumice", color = (colors1[1],0.5), strokewidth = 1.25, strokecolor=:red3, npoints=500000)

			Axis_Kmacro = Axis(Fig[1, 2], xlabel= L"$K_{Mac_%}$", ylabel=L"$Density$ [-]", title= "" ,  titlecolor=titlecolor, xticklabelrotation=xticklabelrotation, ylabelsize=ylabelsize, xlabelsize=xlabelSize, xticksize=xticksize, yticksize=yticksize, width=width, height=height, titlesize=titlesize,  xgridvisible=xgridvisible, ygridvisible=ygridvisible, xminorticksvisible=xminorticksvisible, yminorticksvisible=yminorticksvisible, xtickwidth=xtickwidt, ytickwidth=ytickwidt, xtickalign=xtickalign, ytickalign=ytickalign, xticksmirrored=xticksmirrored, yticksmirrored=yticksmirrored, xtrimspine=xtrimspine,  ytrimspine=ytrimspine, xgridstyle=xgridstyle, ygridstyle=ygridstyle, xminorticks=IntervalsBetween(5), yminorticks=IntervalsBetween(5), xlabelpadding=xlabelpadding, ylabelpadding=ylabelpadding, xminortickalign=xminortickalign, yminortickalign=yminortickalign,  titlefont = "CMU Serif")

			xlims!(Axis_Kmacro, 0, 1.0)

			Label(Fig[1, 2, TopLeft()], "(B)", fontsize=18, padding=(0, -40, -30, 10), halign=:right, font=("CMU Serif"), color=:midnightblue)

				density!(Axis_Kmacro, K_Macro[end-60:end], label="Pumice", color =:lightsalmon, strokewidth = 1.25, strokecolour=:yellow, npoints=50000)

				density!(Axis_Kmacro, K_Macro[1:end-61], label="NonPumice", color = (colors1[1],0.5), strokewidth = 1.25, strokecolor=:red3, npoints=500000)

				Legend(Fig[2,1:2], Axis_Kmacro, framecolor=(:grey, 0.5), labelsize=labelsize, valign=:top, padding=5, tellheight=true, tellwidt=true, nbanks=2, backgroundcolor=:gray100)

	# General
	resize_to_layout!(Fig)
	trim!(Fig.layout)
	colgap!(Fig.layout, 10)
	rowgap!(Fig.layout, 10)

	Path = raw"D:\TEMP\Plots\DensityPlots.svg"
	save(Path, Fig)
	display(Fig)
		
	return nothing
	end  # function: DENSITY_PLOT
	# ------------------------------------------------------------------

	

	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	#		FUNCTION : PLOTTING_KUNSAT_COMPARE_MODELS
	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	function PLOTTING_KUNSAT_COMPARE_MODELS()

		function RELATIONSHIPS_MAC(Œ®macMat; PœÉ_Mac=2)
			œÉMac    = hydroRelation.FUNC_Œ®macMat_2_œÉMac(;Œ®macMat, PœÉ_Mac)
			Œ®mMac   = hydroRelation.FUNC_Œ®macMat_2_Œ®mMac(;Œ®macMat=Œ®macMat, œÉMac)
		return œÉMac, Œ®mMac
		end  # function: RELATIONSHIPS_MAC

		function RELATIONSHIPS_MAT(Œ®macMat, œÉ; PœÉ=3)
			Œ®macMat‚ÇÇ = exp((log(‚àöŒ®macMat) + log(Œ®macMat)) * 0.5)
			Œ®m  = hydroRelation.FUNC_œÉ_2_Œ®m(;Œ®macMat=Œ®macMat‚ÇÇ, œÉ, PœÉ=PœÉ, üéè_Min=false)
		return Œ®m
		end

		function Œ∏œà_KUNSAT_MAT_Œ∑(;Œ®‚ÇÅ=Œ®‚ÇÅ, Œ∏s=0.4, Œ∏sMacMat=0.35, Œ∏r=0.0, œÉ, Œ®macMat, œÑb=1.5, œÑbMac=0.8, Ks=1.0, œÑa=0.5, œÑaMac=0.5, œÑc=1.0, œÑcMac=2.0, œÑ‚Çö=2.0)
			Œ®m = RELATIONSHIPS_MAT(Œ®macMat, œÉ)
			œÉMac, Œ®mMac = RELATIONSHIPS_MAC(Œ®macMat)
			œÉ_Min=0.7
			œÉ_Max=4.0
   
			Kunsat_Mat_Norm                 = kunsat.kg.KUNSAT_Œ∏Œ®Se(;Œ®‚ÇÅ=Œ®‚ÇÅ, Œ∏s, Œ∏sMacMat, Œ∏r, Œ®m, œÉ, Œ®mMac, Œ®macMat, œÉMac, Ks, œÑa=0.5, œÑb=1.103, œÑc=1.0, œÑ‚Çö=1.9, œÑaMac=0.5, œÑbMac=0.6, œÑcMac=2.0, œÉ_Min, œÉ_Max, KosugiModel_KŒ®‚ç∞="Œ®macMat", KosugiModel_Œ∏Œ®‚ç∞="Œ®macMat", KosugiModel_œÉ_2_Tb=false)

			Kunsat_Mat_Trad                 = kunsat.kg.KUNSAT_Œ∏Œ®Se(;Œ®‚ÇÅ=Œ®‚ÇÅ, Œ∏s, Œ∏sMacMat, Œ∏r, Œ®m, œÉ, Œ®mMac, Œ®macMat, œÉMac, Ks, œÑa=0.5, œÑb=1.103, œÑc=1.0, œÑ‚Çö=1.9, œÑaMac=0.5, œÑbMac=0.6, œÑcMac=2.0, œÉ_Min, œÉ_Max, KosugiModel_KŒ®‚ç∞="Œ®macMat", KosugiModel_Œ∏Œ®‚ç∞="Œ®macMat", KosugiModel_œÉ_2_Tb=false)
	
         KsMac, KsMat                    = kunsat.kg.FUNC_KsMac("Œ®macMat", Ks::Float64, "Œ®macMat", Tb::Float64, TbMac::Float64, Tc::Float64, œÑ‚Çö::Float64, TcMac::Float64, Œ∏r::Float64, Œ∏s::Float64, Œ∏sMacMat::Float64, œÉ::Float64, œÉMac::Float64, Œ®m::Float64, Œ®macMat::Float64, Œ®mMac::Float64)

         Œ∏Dual                       		= wrc.kg.Œ®_2_Œ∏(;Œ®‚ÇÅ=Œ®‚ÇÅ, Œ∏s, Œ∏sMacMat, Œ∏r, Œ®m, œÉ, Œ®mMac, Œ®macMat, œÉMac, KosugiModel_Œ∏Œ®‚ç∞="Œ®macMat")
		return KsMat, Kunsat_Mat_Norm,  Kunsat_Mat_Trad, Œ∏Dual
		end

		# Parameters
         Œ∏s = 1.0
         Œ∏r = 0.0
         Ks = 1.0
			œÑbMac = 0.8

		#  For every œà
			Œ®_Min_Log = log10(0.0001)
			Œ®_Max_Log = log10(1500_00.0)
			Œ® = 10.0.^(collect(Œ®_Min_Log:0.0001:Œ®_Max_Log))
			N_Œ®  = length(Œ®)

			œÉ =  collect(range(0.75, stop=3.5, length=3))
			N_œÉ = length(œÉ)

			Texture = ["Sandy soils", "Silty soils", "Clay soils"] 

			Tb2 = collect(range(0.6, stop=1.5, length=5))
			N_Tb = length(Tb2)

			Œ®macMat = collect(range(30.0, stop=200.0, length=3))
			N_Œ®macMat = length(Œ®macMat)

			# Œ∏sMacMat_Œ∑ = collect(range(0.75, stop=1.0, length=4))
			# N_Œ∏sMacMat_Œ∑  = length(Œ∏sMacMat_Œ∑)
      	# Œ∏sMacMat = Œ∏s .* Œ∏sMacMat_Œ∑

			# KsMac = zeros(100)

		
		# FUNCTION Kunsat_Tb
         KunsatMat_Tb = zeros(N_Œ®, N_œÉ, N_Tb, N_Œ®macMat)
			Kunsat_Mat_Tradition = zeros(N_Œ®, N_œÉ, N_Tb, N_Œ®macMat)
         KsMatrice    = zeros(N_œÉ, N_Tb, N_Œ®macMat)
			Œ∏œà = zeros(N_Œ®, N_œÉ, N_Tb, N_Œ®macMat)
			
			for (iiŒ®, iŒ®) in enumerate(Œ®), (iiœÉ, iœÉ) in enumerate(œÉ), (iiTb, iTb) in enumerate(Tb2), (iiŒ®macMat, iŒ®macMat) in enumerate(Œ®macMat)

			 	KsMatrice[iiœÉ, iiTb, iiŒ®macMat], KunsatMat_Tb[iiŒ®, iiœÉ, iiTb, iiŒ®macMat], Kunsat_Mat_Tradition[iiŒ®, iiœÉ, iiTb, iiŒ®macMat], Œ∏œà[iiŒ®, iiœÉ, iiTb, iiŒ®macMat] = Œ∏œà_KUNSAT_MAT_Œ∑(;Œ®‚ÇÅ=iŒ®, œÉ=iœÉ, œÑb=1.5, œÑbMac=œÑbMac, Œ®macMat=iŒ®macMat)

			end


			ColourOption = [:glasbey_hv_n256,:seaborn_bright,:seaborn_colorblind,:seaborn_dark,:seaborn_deep,:tab10,:tableau_10,:tol_bright]

			Colormap = cgrad(colorschemes[ColourOption[ColourOption_No]], size(colorschemes[ColourOption[ColourOption_No]]), categorical = true)

			Œ®ticks = [0, 50, 100, 500, 1000,5000,100_00, 500_00, 1000_00, 1500_00] # mm

			Œ®_Log = Array{Float64}(undef, N_Œ®)
				for iZ=1:N_Œ®
					Œ®_Log[iZ] = log1p(Œ®[iZ])
				end

		# Starting to plot	
			CairoMakie.activate!(type="svg", pt_per_unit=1)
			Fig =  Figure(figure_padding = 10; fonts = ( ; regular="CMU Serif"), backgroundcolor = :mintcream) 

			Label(Fig[1, 1:N_œÉ, Top()], L"Lognormal bimodal $K(Œ®)$ Models", valign=:bottom, font=:bold, padding=(0, 0, 50, 0), color=:darkblue,  fontsize=titlesize*1.5)

			Axis_KunsatMat_Tb = []
			for (iiœÉ, iœÉ) in enumerate(œÉ)
				for(iiŒ®macMat, iŒ®macMat) in enumerate(Œ®macMat)

				if iiœÉ==1
					Label(Fig[iiœÉ, iiŒ®macMat, TopRight()], "($iiœÉ-$iiŒ®macMat)", fontsize=18, padding=(-50, 5, -100, 10), halign=:right, font=("CMU Serif"))
					else
						Label(Fig[iiœÉ, iiŒ®macMat, TopRight()], "($iiœÉ-$iiŒ®macMat)", fontsize=18, padding=(-50, 5, -50, 10), halign=:right, font=("CMU Serif"))
					end

					Axis_KunsatMat_Tb = Axis(Fig[iiœÉ, iiŒ®macMat], xlabel= L"$œà$ [kPa]", ylabel=L"$K(\psi)$ [L T ‚Åª¬π]", title="$(Texture[iiœÉ]) Œ®macMat=$(Int32(floor(iŒ®macMat, digits=0))) mm" ,  titlecolor=titlecolor, xticklabelrotation=xticklabelrotation, ylabelsize=ylabelsize, xlabelsize=xlabelSize, xticksize=xticksize, yticksize=yticksize, width=width, height=height, titlesize=titlesize,  xgridvisible=xgridvisible, ygridvisible=ygridvisible, xminorticksvisible=xminorticksvisible, yminorticksvisible=yminorticksvisible, xtickwidth=xtickwidt, ytickwidth=ytickwidt, xtickalign=xtickalign, ytickalign=ytickalign, xticksmirrored=xticksmirrored, yticksmirrored=yticksmirrored, xtrimspine=xtrimspine,  ytrimspine=ytrimspine, xgridstyle=xgridstyle, ygridstyle=ygridstyle, yminorticks=IntervalsBetween(5), xlabelpadding=xlabelpadding, ylabelpadding=ylabelpadding, xminortickalign=xminortickalign, yminortickalign=yminortickalign, titlefont = "CMU Serif")

						Axis_KunsatMat_Tb.xticks = (log1p.(Œ®ticks), string.(cst.Mm_2_kPa .* Œ®ticks))

						if iiœÉ < N_œÉ
							hidexdecorations!(Axis_KunsatMat_Tb, ticks=false, grid=false)
						end

						if iiŒ®macMat > 1
							hideydecorations!(Axis_KunsatMat_Tb, ticks=false, grid=false)
						end

						lines!(Fig[iiœÉ, iiŒ®macMat], Œ®_Log, KunsatMat_Tb[:, iiœÉ, 1, iiŒ®macMat], linewidth=Linewidth, color=:darkblue, label=label="KŒ®_Macro, œÉ =$(floor(œÉ[iiœÉ], digits=2))")
						lines!(Fig[iiœÉ, iiŒ®macMat], Œ®_Log, Kunsat_Mat_Tradition[:, iiœÉ, 1, iiŒ®macMat], linewidth=Linewidth, color=:aquamarine4,  label="Œ∏Œ®_Mualem, œÉ =$(floor(œÉ[iiœÉ], digits=2))", linestyle=:dash)

						lines!(Axis_KunsatMat_Tb,[Point(log1p(0.0), KsMatrice[iiœÉ, 1, iiŒ®macMat] ), Point(log1p(Œ®macMat[iiŒ®macMat]), KsMatrice[iiœÉ, 1, iiŒ®macMat])], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)
				

						lines!(Axis_KunsatMat_Tb,[Point(log1p(Œ®macMat[iiŒ®macMat]), 0.0), Point(log1p(Œ®macMat[iiŒ®macMat]), 1.0)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)
						text!(log1p(Œ®macMat[iiŒ®macMat]), 0, text =L"œà_{MacMat}", align=(:left,:bottom), rotation = œÄ/2,  color=textcolor, fontsize=textsize)
						text!(log1p(0),  0.5, text =L"K_{sMac}", align=(:left,:bottom), color=textcolor, fontsize=textsize, rotation = œÄ/2)
	
				end # for(iiŒ®macMat, iŒ®macMat) in enumerate(Œ®macMat)

				Legend(Fig[iiœÉ,N_Œ®macMat+1], Axis_KunsatMat_Tb, framecolor=(:grey, 0.5), labelsize=labelsize, valign=:top, padding=5, tellheight=true, tellwidt=true, nbanks=1, backgroundcolor=:gray100)
			end # for (iiœÉ, iœÉ) in enumerate(œÉ)

			# General
				resize_to_layout!(Fig)
				trim!(Fig.layout)
				colgap!(Fig.layout, 20)
				rowgap!(Fig.layout, 20)

				Path = raw"D:\TEMP\Plots\MacroKunsatPumiceNonPumice.svg"
				save(Path, Fig)
				display(Fig)
		
	return nothing
	end  # function: name
	# ------------------------------------------------------------------


		# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		#		FUNCTION : PLOT_œÉ_2_œÑb
		# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		function PLOT_Œ®macMat_2_œÉmac()
	
			Œ®macMat = collect(range(30, stop=200, length=20000))
			œÉMac = zeros(length(Œ®macMat))
			Œ®mMac =  zeros(length(Œ®macMat))


			for (i, iiŒ®macMat) ‚àà enumerate(Œ®macMat)
				œÉMac[i] = hydroRelation.FUNC_Œ®macMat_2_œÉMac(;Œ®macMat=iiŒ®macMat, PœÉ_Mac=2)
				Œ®mMac[i] = hydroRelation.FUNC_Œ®macMat_2_Œ®mMac(;Œ®macMat=iiŒ®macMat)
				Œ®mMac[i] = ‚àöiiŒ®macMat
			end


			CairoMakie.activate!(type="svg", pt_per_unit=1)
			Fig =  Figure(figure_padding = 10; fonts = ( ; regular="CMU Serif"), backgroundcolor = :grey100) 

			Label(Fig[1, 1, TopLeft()], "(A)", fontsize=18, padding=(0, -40, -30, 10), halign=:right, font=("CMU Serif"), color=:midnightblue)

			Axis_A = Axis(Fig[1, 1], xlabel= L"$\psi _{MacMat}$ [-]", ylabel=L"$\sigma_{Mac}$ [-]", title= "" ,  titlecolor=titlecolor, xticklabelrotation=0.0, ylabelsize=ylabelsize, xlabelsize=xlabelSize, xticksize=xticksize, yticksize=yticksize, width=width, height=height, titlesize=titlesize,  xgridvisible=false, ygridvisible=false, xminorticksvisible=xminorticksvisible, yminorticksvisible=yminorticksvisible, xtickwidth=xtickwidt, ytickwidth=ytickwidt, xtickalign=xtickalign, ytickalign=ytickalign, xticksmirrored=xticksmirrored, yticksmirrored=yticksmirrored, xtrimspine=xtrimspine,  ytrimspine=ytrimspine, xgridstyle=xgridstyle, ygridstyle=ygridstyle, xminorticks=IntervalsBetween(5), yminorticks=IntervalsBetween(5), xlabelpadding=xlabelpadding, ylabelpadding=ylabelpadding, xminortickalign=xminortickalign, yminortickalign=yminortickalign,  titlefont = "CMU Serif")

				hidexdecorations!(Axis_A, ticks=false, grid=false)
				
				lines!(Fig[1,1],Œ®macMat, œÉMac, linewidth=Linewidth*1.5, color=:mediumblue, linestyle=:dash)

			Axis_B = Axis(Fig[2, 1], xlabel= L"$\psi _{MacMat}$ [-]", ylabel=L"$\psi_{mMac}$ [-]", title= "" ,  titlecolor=titlecolor, xticklabelrotation=0.0, ylabelsize=ylabelsize, xlabelsize=xlabelSize, xticksize=xticksize, yticksize=yticksize, width=width, height=height, titlesize=titlesize,  xgridvisible=false, ygridvisible=false, xminorticksvisible=xminorticksvisible, yminorticksvisible=yminorticksvisible, xtickwidth=xtickwidt, ytickwidth=ytickwidt, xtickalign=xtickalign, ytickalign=ytickalign, xticksmirrored=xticksmirrored, yticksmirrored=yticksmirrored, xtrimspine=xtrimspine,  ytrimspine=ytrimspine, xgridstyle=xgridstyle, ygridstyle=ygridstyle, xminorticks=IntervalsBetween(5), yminorticks=IntervalsBetween(5), xlabelpadding=xlabelpadding, ylabelpadding=ylabelpadding, xminortickalign=xminortickalign, yminortickalign=yminortickalign,  titlefont = "CMU Serif")
			
				Label(Fig[2, 1, TopLeft()], "(b)", fontsize=20, padding=(0, -40, -30, 10), halign=:right, font=("CMU Serif"), color=:midnightblue)

				lines!(Fig[2,1], Œ®macMat, Œ®mMac, linewidth=Linewidth*1.5, color=:mediumblue, linestyle=:dash)

			# Legend(Fig[2,1:2], Axis_A, framecolor=(:grey, 0.5), labelsize=labelsize, valign=:top, padding=5, tellheight=true, tellwidt=true, nbanks=2, backgroundcolor=:gray100)

			# General
				resize_to_layout!(Fig)
				trim!(Fig.layout)
				colgap!(Fig.layout, 10)
				rowgap!(Fig.layout, 10)

				Path = raw"D:\TEMP\Plots\PLOT_Œ®macMat_2_œÉmac.svg"
				save(Path, Fig)
				display(Fig)

	return nothing
	end
# ------------------------------------------------------------------

	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	#		FUNCTION : KŒ®Œ∏
	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		function PLOTTING_ILLUSTRATION_KŒ®Œ∏()
			function RELATIONSHIPS_MAC(Œ®macMat; PœÉ_Mac=2)
				œÉMac    = hydroRelation.FUNC_Œ®macMat_2_œÉMac(;Œ®macMat, PœÉ_Mac)
				Œ®mMac   = hydroRelation.FUNC_Œ®macMat_2_Œ®mMac(;Œ®macMat=Œ®macMat)
			return œÉMac, Œ®mMac
			end  # function: RELATIONSHIPS_MAC
	
			function RELATIONSHIPS_MAT(Œ®macMat, œÉ; PœÉ=3)
				Œ®macMat‚ÇÇ = exp((log(‚àöŒ®macMat) + log(Œ®macMat)) * 0.5)
				Œ®m  = hydroRelation.FUNC_œÉ_2_Œ®m(;Œ®macMat=Œ®macMat‚ÇÇ, œÉ, PœÉ=PœÉ, üéè_Min=false)
			return Œ®m
			end
	
			function Œ∏œà_KUNSAT_MAT_Œ∑(;Œ®‚ÇÅ=Œ®‚ÇÅ, Œ∏s=0.45, Œ∏sMacMat=0.35, Œ∏r=0.0, œÉ, Œ®macMat, œÑb=1.5, Ks=1.0, œÑa=0.5, œÑaMac=0.5, œÑc=1.0, œÑcMac=2.0, œÑ‚Çö=2.0)
				Œ®m = RELATIONSHIPS_MAT(Œ®macMat, œÉ)
				œÉMac, Œ®mMac = RELATIONSHIPS_MAC(Œ®macMat)
				œÉ_Min=0.7
				œÉ_Max=4.0
				
				Kunsat_Mat_Norm = kunsat.kg.KUNSAT_Œ∏Œ®Se(;Œ®‚ÇÅ=Œ®‚ÇÅ, Œ∏s, Œ∏sMacMat=Œ∏s-0.01, Œ∏r, Œ®m, œÉ, Œ®mMac, Œ®macMat, œÉMac, Ks, œÑa=0.5, œÑb=1.103, œÑc=1.0, œÑ‚Çö=2.9, œÑaMac=0.5, œÑbMac=0.619, œÑcMac=2.0, œÉ_Min, œÉ_Max, KosugiModel_KŒ®‚ç∞="Œ®macMat", KosugiModel_Œ∏Œ®‚ç∞="Œ®macMat", KosugiModel_œÉ_2_Tb=false)
	
				
				Kunsat_Pumice0 = kunsat.kg.KUNSAT_Œ∏Œ®Se(;Œ®‚ÇÅ=Œ®‚ÇÅ, Œ∏s, Œ∏sMacMat, Œ∏r, Œ®m, œÉ, Œ®mMac, Œ®macMat, œÉMac, Ks, œÑa=0.5, œÑb=1.308, œÑc=1.0, œÑ‚Çö=2.9, œÑaMac=0.5, œÑbMac=0.806, œÑcMac=2.0, œÉ_Min, œÉ_Max, KosugiModel_KŒ®‚ç∞="Œ®macMat", KosugiModel_Œ∏Œ®‚ç∞="Œ®macMat", KosugiModel_œÉ_2_Tb=false)

				Œ∏Dual_Pumice0           = wrc.kg.Œ®_2_Œ∏(;Œ®‚ÇÅ=Œ®‚ÇÅ, Œ∏s, Œ∏sMacMat, Œ∏r, Œ®m, œÉ, Œ®mMac, Œ®macMat, œÉMac, KosugiModel_Œ∏Œ®‚ç∞="Œ®macMat")
				
				KsMac, KsMat    = kunsat.kg.FUNC_KsMac(;KosugiModel_œÉ_2_Tb=false, Ks, KosugiModel_KŒ®‚ç∞="Œ®macMat", Œ∏r, Œ∏s, Œ∏sMacMat, œÉ, œÉ_Max, œÉ_Min, œÉMac, œÑa=0.5, œÑaMac=0.5, œÑb=1.308, œÑbMac=0.806, œÑc=1.0, œÑcMac=2.0, œÑ‚Çö, Œ®m, Œ®macMat, Œ®mMac)

				Œ∏Dual           = wrc.kg.Œ®_2_Œ∏(;Œ®‚ÇÅ=Œ®‚ÇÅ, Œ∏s, Œ∏sMacMat=Œ∏s-0.01, Œ∏r, Œ®m, œÉ, Œ®mMac, Œ®macMat, œÉMac, KosugiModel_Œ∏Œ®‚ç∞="Œ®macMat")
			return KsMat, Kunsat_Mat_Norm,  Kunsat_Pumice0, Œ∏Dual, Œ∏Dual_Pumice0
			end
	
			# Parameters
				Œ∏s = 0.45
				Œ∏r = 0.0
				Ks = 1.0
				Œ∏sMacMat = 0.35
	
			#  For every œà
				Œ®_Min_Log = log10(0.0001)
				Œ®_Max_Log = log10(1500_00.0)
				Œ® = 10.0.^(collect(Œ®_Min_Log:0.0001:Œ®_Max_Log))
				N_Œ®  = length(Œ®)
	
				œÉ =  collect(range(0.75, stop=3., length=3))
				N_œÉ = length(œÉ)
	
				Texture = ["Sandy soils", "Silty soils", "Clay soils"] 
	
				Œ®macMat = collect(range(60.0, stop=60.0, length=1))
				N_Œ®macMat = length(Œ®macMat)
	
				# Œ∏sMacMat_Œ∑ = collect(range(0.75, stop=1.0, length=4))
				# N_Œ∏sMacMat_Œ∑  = length(Œ∏sMacMat_Œ∑)
				# Œ∏sMacMat = Œ∏s .* Œ∏sMacMat_Œ∑
	
				# KsMac = zeros(100)
	
			
			# FUNCTION Kunsat_Tb
				KunsatMat_Tb = zeros(N_Œ®, N_œÉ, N_Œ®macMat)
				Kunsat_Pumice = zeros(N_Œ®, N_œÉ, N_Œ®macMat)
				KsMatrice    = zeros(N_œÉ, N_Œ®macMat)
				Œ∏œà = zeros(N_Œ®, N_œÉ, N_Œ®macMat)
				Œ∏œà_Pumice = zeros(N_Œ®, N_œÉ, N_Œ®macMat)
				
				
				for (iiŒ®, iŒ®) in enumerate(Œ®), (iiœÉ, iœÉ) in enumerate(œÉ), (iiŒ®macMat, iŒ®macMat) in enumerate(Œ®macMat)
	
					 KsMatrice[iiœÉ, iiŒ®macMat], KunsatMat_Tb[iiŒ®, iiœÉ, iiŒ®macMat], Kunsat_Pumice[iiŒ®, iiœÉ, iiŒ®macMat], Œ∏œà[iiŒ®, iiœÉ, iiŒ®macMat], Œ∏œà_Pumice[iiŒ®, iiœÉ, iiŒ®macMat] = Œ∏œà_KUNSAT_MAT_Œ∑(;Œ®‚ÇÅ=iŒ®, œÉ=iœÉ, Œ®macMat=iŒ®macMat)

					 ~, KunsatMat_Tb[iiŒ®, iiœÉ, iiŒ®macMat], ~, Œ∏œà[iiŒ®, iiœÉ, iiŒ®macMat], ~ = Œ∏œà_KUNSAT_MAT_Œ∑(;Œ®‚ÇÅ=iŒ®, œÉ=1.7, Œ®macMat=0.1)
	
				end
	
				ColourOption = [:glasbey_hv_n256,:seaborn_bright,:seaborn_colorblind,:seaborn_dark,:seaborn_deep,:tab10,:tableau_10,:tol_bright]
	
				Colormap = cgrad(colorschemes[ColourOption[ColourOption_No]], size(colorschemes[ColourOption[ColourOption_No]]), categorical = true)
	
				Œ®ticks = [0, 50, 100, 500, 1000,5000,100_00, 500_00, 1000_00, 1500_00] # mm
	
				Œ®_Log = Array{Float64}(undef, N_Œ®)
					for iZ=1:N_Œ®
						Œ®_Log[iZ] = log1p(Œ®[iZ])
					end
	
			# Starting to plot	
				CairoMakie.activate!(type="svg", pt_per_unit=1)
				Fig =  Figure(figure_padding = 10; fonts = ( ; regular="CMU Serif"), backgroundcolor = :grey99) 
	
				Label(Fig[1, 1:N_œÉ, Top()], L"Lognormal bimodal $K(\psi)$ Models", valign=:bottom, font=:bold, padding=(0, 0, 50, 0), color=:darkblue,  fontsize=titlesize*1.5)
	
				Axis_KunsatMat_Tb = []
				for (iiœÉ, iœÉ) in enumerate(œÉ)
					for(iiŒ®macMat, iŒ®macMat) in enumerate(Œ®macMat)
	
					if iiœÉ==1
						Label(Fig[iiœÉ, iiŒ®macMat, TopRight()], "($iiœÉ-$iiŒ®macMat)", fontsize=18, padding=(-50, 5, -100, 10), halign=:right, font=("CMU Serif"))
						else
							Label(Fig[iiœÉ, iiŒ®macMat, TopRight()], "($iiœÉ-$iiŒ®macMat)", fontsize=18, padding=(-50, 5, -50, 10), halign=:right, font=("CMU Serif"))
						end
	
						Axis_KunsatMat_Tb = Axis(Fig[iiœÉ, iiŒ®macMat+1], xlabel= L"$œà$ [kPa]", ylabel=L"$K(\psi)$ [L T ‚Åª¬π]", title="$(Texture[iiœÉ]) Œ®macMat=$(Int32(floor(iŒ®macMat, digits=0))) mm" ,  titlecolor=titlecolor, xticklabelrotation=xticklabelrotation, ylabelsize=ylabelsize, xlabelsize=xlabelSize, xticksize=xticksize, yticksize=yticksize, width=width, height=height, titlesize=titlesize,  xgridvisible=xgridvisible, ygridvisible=ygridvisible, xminorticksvisible=xminorticksvisible, yminorticksvisible=yminorticksvisible, xtickwidth=xtickwidt, ytickwidth=ytickwidt, xtickalign=xtickalign, ytickalign=ytickalign, xticksmirrored=xticksmirrored, yticksmirrored=yticksmirrored, xtrimspine=xtrimspine,  ytrimspine=ytrimspine, xgridstyle=xgridstyle, ygridstyle=ygridstyle, yminorticks=IntervalsBetween(5), xlabelpadding=xlabelpadding, ylabelpadding=ylabelpadding, xminortickalign=xminortickalign, yminortickalign=yminortickalign, titlefont = "CMU Serif")
	
							Axis_KunsatMat_Tb.xticks = (log1p.(Œ®ticks), string.(cst.Mm_2_kPa .* Œ®ticks))
	
							# if iiœÉ < N_œÉ
							# 	hidexdecorations!(Axis_KunsatMat_Tb, ticks=false, grid=false)
							# end
	
							# if iiŒ®macMat > 1
							# 	hideydecorations!(Axis_KunsatMat_Tb, ticks=false, grid=false)
							# end
	
							lines!(Fig[iiœÉ, iiŒ®macMat+1], Œ®_Log, 0.7.*KunsatMat_Tb[:, iiœÉ, iiŒ®macMat], linewidth=Linewidth*2, color=:darkblue, label=label=" Normal, œÉ =$(floor(œÉ[iiœÉ], digits=2))")
	
							lines!(Fig[iiœÉ, iiŒ®macMat+1], Œ®_Log, Kunsat_Pumice[:, iiœÉ, iiŒ®macMat], linewidth=Linewidth*2, color=:aquamarine4,  label="Pumice, œÉ =$(floor(œÉ[iiœÉ], digits=2))", linestyle=:dash)
	
							lines!(Axis_KunsatMat_Tb,[Point(log1p(0.0), KsMatrice[iiœÉ, iiŒ®macMat] ), Point(log1p(Œ®macMat[iiŒ®macMat]), KsMatrice[iiœÉ, iiŒ®macMat])], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)
	
							lines!(Axis_KunsatMat_Tb,[Point(log1p(Œ®macMat[iiŒ®macMat]), 0.0), Point(log1p(Œ®macMat[iiŒ®macMat]), 1.0)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)
	
							text!(log1p(Œ®macMat[iiŒ®macMat]), 0, text =L"œà_{MacMat}", align=(:left,:bottom), rotation = œÄ/2,  color=textcolor, fontsize=textsize)
	
							text!(log1p(0),  KsMatrice[iiœÉ, iiŒ®macMat], text =L"K_{sMacMat}", align=(:left,:bottom), color=textcolor, fontsize=textsize, rotation =0)

							Axis_Œ∏œà = Axis(Fig[iiœÉ, iiŒ®macMat], xlabel= L"$œà$ [kPa]", ylabel=L"$\theta(\psi)$ [L¬≥ L‚Åª¬≥]", title="$(Texture[iiœÉ]) Œ®macMat = $(Int32(floor(iŒ®macMat, digits=0))) mm" ,  titlecolor=titlecolor, xticklabelrotation=xticklabelrotation, ylabelsize=ylabelsize, xlabelsize=xlabelSize, xticksize=xticksize, yticksize=yticksize, width=width, height=height, titlesize=titlesize,  xgridvisible=xgridvisible, ygridvisible=ygridvisible, xminorticksvisible=xminorticksvisible, yminorticksvisible=yminorticksvisible, xtickwidth=xtickwidt, ytickwidth=ytickwidt, xtickalign=xtickalign, ytickalign=ytickalign, xticksmirrored=xticksmirrored, yticksmirrored=yticksmirrored, xtrimspine=xtrimspine,  ytrimspine=ytrimspine, xgridstyle=xgridstyle, ygridstyle=ygridstyle, yminorticks=IntervalsBetween(5), xlabelpadding=xlabelpadding, ylabelpadding=ylabelpadding, xminortickalign=xminortickalign, yminortickalign=yminortickalign,  titlefont = "CMU Serif")

							Axis_Œ∏œà.xticks = (log1p.(Œ®ticks), string.(cst.Mm_2_kPa .* Œ®ticks))
	
							# if iiœÉ < N_œÉ
							# 	hidexdecorations!(Axis_Œ∏œà, ticks=false, grid=false)
							# end
	
							# if iiŒ®macMat > 1
							# 	hideydecorations!(Axis_Œ∏œà, ticks=false, grid=false)
							# end
	
							# for (iiTb, iTb) in enumerate(Tb2)
								lines!(Fig[iiœÉ, iiŒ®macMat], Œ®_Log, Œ∏œà[:, iiœÉ, iiŒ®macMat], linewidth=Linewidth*2, color=:darkblue, label="Œ∏Œ®_MacMat, œÉ =$(floor(œÉ[iiœÉ], digits=2))")
								lines!(Fig[iiœÉ, iiŒ®macMat], Œ®_Log,  Œ∏œà_Pumice[:, iiœÉ, iiŒ®macMat], linewidth=Linewidth*2, color=:aquamarine4, label="Œ∏Œ®_Trad, œÉ =$(floor(œÉ[iiœÉ], digits=2))", linestyle=:dash)
								lines!(Axis_Œ∏œà,[Point(log1p(Œ®macMat[iiŒ®macMat]),0), Point(log1p(Œ®macMat[iiŒ®macMat]), Œ∏s)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)
								lines!(Axis_Œ∏œà,[Point(log1p(0), Œ∏sMacMat), Point(log1p(Œ®macMat[iiŒ®macMat]), Œ∏sMacMat)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)
								lines!(Axis_Œ∏œà,[Point(log1p(0), Œ∏s), Point(log1p(Œ®macMat[iiŒ®macMat]), Œ∏s)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)
							# end
	
							text!(log1p(0), Œ∏sMacMat, text =L"Œ∏_{sMacMat}", align=(:left,:top),  color=textcolor, fontsize=textsize)
							text!(log1p(0), Œ∏s, text =L"Œ∏_{s}", align=(:left,:top),  color=textcolor, fontsize=textsize)
							text!(log1p(Œ®macMat[iiŒ®macMat]), 0, text =L"œà_{MacMat}", align=(:left,:bottom), rotation = œÄ/2,  color=textcolor, fontsize=textsize)

		
					end # for(iiŒ®macMat, iŒ®macMat) in enumerate(Œ®macMat)
	
					Legend(Fig[iiœÉ,N_Œ®macMat+2], Axis_KunsatMat_Tb, framecolor=(:grey, 0.5), labelsize=labelsize, valign=:top, padding=5, tellheight=true, tellwidt=true, nbanks=1, backgroundcolor=:gray100)
				end # for (iiœÉ, iœÉ) in enumerate(œÉ)
	
				# General
					resize_to_layout!(Fig)
					trim!(Fig.layout)
					colgap!(Fig.layout, 20)
					rowgap!(Fig.layout, 20)
	
					Path = raw"D:\TEMP\Plots\PLOTTING_ILLUSTRATION_KŒ®Œ∏.svg"
					save(Path, Fig)
					display(Fig)
			
		return nothing
		
		end  # function: KŒ®Œ∏
	# ------------------------------------------------------------------


end #module pumiceManuscript
# ------------------------------------------------------------------


pumiceManuscript.PLOTTING_ILLUSTRATION_KŒ®Œ∏()
#  pumiceManuscript.PLOTTING_Kh_MODELS()
# pumiceManuscript.DENSITY_PLOT()
# pumiceManuscript.PLOT_œÉ_2_œÑb()
# pumiceManuscript.PLOTTING_Œ∏œà_MACRO()
#  pumiceManuscript.PLOTTING_KUNSAT_MACRO()
#  pumiceManuscript.PLOTTING_KUNSAT_MACRO_TbMac()
# pumiceManuscript.PLOT_Œ®macMat_2_œÉmac()

#   include(raw"D:\MAIN\MODELS\AquaPore_Toolkit\src\Temporary\Manuscript\PumiceManuscript.jl")



		
		# Axis_‚àÇŒ∏‚àÇR = Axis(Fig[1,1], xlabel="R [mm]", ylabel="‚àÇŒ∏‚àÇR", xscale=log,  xminorticksvisible = true, xminorgridvisible = true, xminorticks = IntervalsBetween(5))

		# # , yscale=log10, titlesize=30, xlabelsize=XlabelSize, ylabelsize=YlabelSize, xgridvisible=true, xticklabelrotation = pi/2, 
		# 	# Axis_‚àÇŒ∏‚àÇR.xticks = (cst.Y ./ TableComplete_Œ∏Œ®, string.((round.(cst.Y ./ TableComplete_Œ∏Œ®, digits = 2))))

		# 	# xlims!(Axis_‚àÇŒ∏‚àÇR, cst.Y / Œ®_Max, cst.Y / Œ®_Min)
		# 	Plot1=lines!(Axis_‚àÇŒ∏‚àÇR, cst.Y ./  Œ® , ‚àÇŒ∏‚àÇR_1,  color=:green, linewidth=Linewidth, label="")
		# 	Plot2=lines!(Axis_‚àÇŒ∏‚àÇR,  cst.Y ./ Œ® , ‚àÇŒ∏‚àÇR_2, color=:blue, linewidth=Linewidth, label="")

		# Axis_‚àÇŒ∏‚àÇŒ® = Axis(Fig[1,1], xlabel="Œ® [mm]", ylabel="‚àÇŒ∏‚àÇŒ®", xscale=log)
		# 	# titlesize=30, xlabelsize=XlabelSize, ylabelsize=YlabelSize, xgridvisible=false, ygridvisible=false,xminorticksvisible=true, yminorticksvisible=true, xticklabelrotation = pi/2
			
		# 	# Axis_‚àÇŒ∏‚àÇŒ®.xticks = (TableComplete_Œ∏Œ®, string.(round.(TableComplete_Œ∏Œ®, digits=1)))
		# 	# xlims!(Axis_‚àÇŒ∏‚àÇŒ®, Œ®_Min, Œ®_Max)
		# 	Plot3 = lines!(Axis_‚àÇŒ∏‚àÇŒ®, Œ® , ‚àÇŒ∏‚àÇŒ®_1,  color=:green, linewidth=Linewidth, label="")
		# 	Plot4 = lines!(Axis_‚àÇŒ∏‚àÇŒ®, Œ® , ‚àÇŒ∏‚àÇŒ®_2, color=:blue, linewidth=Linewidth, label="")

			# lines!(Axis_‚àÇŒ∏‚àÇŒ®, [Point(Œ®m_Min_Mode,0), Point(Œ®m_Min_Mode, 1)], color=:green, linewidth=Linewidth)
			# lines!(Axis_‚àÇŒ∏‚àÇŒ®, [Point(Œ®m_Max_Mode,0), Point(Œ®m_Max_Mode, 1)], color=:blue, linewidth=Linewidth)
			# lines!(Axis_‚àÇŒ∏‚àÇŒ®, [Point(Œ®mMac_Mode,0), Point(Œ®mMac_Mode, 1)], color=:navyblue, linewidth=Linewidth)
			# lines!(Axis_‚àÇŒ∏‚àÇŒ®, [Point(Œ®macMat,0), Point(Œ®macMat, 0.5)], color=:red, linewidth=Linewidth)

			# lines!(Axis_‚àÇŒ∏‚àÇŒ®, [Point(Œ®mMac_PœÉ‚ÇÇ_Plus,0), Point(Œ®mMac_PœÉ‚ÇÇ_Plus, 1.0)], color=:violet)
			# lines!(Axis_‚àÇŒ∏‚àÇŒ®, [Point(Œ®mMac_PœÉ‚ÇÇ_Minus,0), Point(Œ®mMac_PœÉ‚ÇÇ_Minus, 1.0)], color=:violet)

			# lines!(Axis_‚àÇŒ∏‚àÇŒ®, [Point(Œ®mMac_PœÉ‚ÇÉ_Plus,0), Point(Œ®mMac_PœÉ‚ÇÉ_Plus, 0.8)], color=:violet)
			# lines!(Axis_‚àÇŒ∏‚àÇŒ®, [Point(Œ®mMac_PœÉ‚ÇÉ_Minus,0), Point(Œ®mMac_PœÉ‚ÇÉ_Minus, 0.8)], color=:violet)


			
			# lines!(Axis_‚àÇŒ∏‚àÇŒ®, [Point(Œ®m_PœÉ‚ÇÇ_Plus,0), Point(Œ®m_PœÉ‚ÇÇ_Plus, 1.0)], color=:blue)
			# lines!(Axis_‚àÇŒ∏‚àÇŒ®, [Point(Œ®m_PœÉ‚ÇÇ_Minus,0), Point(Œ®m_PœÉ‚ÇÇ_Minus, 1.0)], color=:blue)

			# lines!(Axis_‚àÇŒ∏‚àÇŒ®, [Point(Œ®m_PœÉ‚ÇÉ_Plus,0), Point(Œ®m_PœÉ‚ÇÉ_Plus, 0.8)], color=:blue)
			# lines!(Axis_‚àÇŒ∏‚àÇŒ®, [Point(Œ®m_PœÉ‚ÇÉ_Minus,0), Point(Œ®m_PœÉ‚ÇÉ_Minus, 0.8)], color=:blue)

						# Modes
			# Œ®m_Min_Mode = hydroRelation.FUNC_Œ®mMode(;Œ®m‚ÇÄ=Œ®m_Min, œÉ‚ÇÄ=œÉ)
			# Œ®m_Max_Mode = hydroRelation.FUNC_Œ®mMode(;Œ®m‚ÇÄ=Œ®m_Max, œÉ‚ÇÄ=œÉ)
			# Œ®mMac_Mode  = hydroRelation.FUNC_Œ®mMode(;Œ®m‚ÇÄ=Œ®mMac, œÉ‚ÇÄ=œÉMac)
			# Œ®m_Mode     = hydroRelation.FUNC_Œ®mMode(;Œ®m‚ÇÄ=Œ®m_Max, œÉ‚ÇÄ=œÉ)

		# For plotting
			# Œ®mMac_PœÉ‚ÇÇ_Plus  = exp(log(Œ®mMac_Mode) + PœÉ‚ÇÇ * œÉMac)
			# Œ®mMac_PœÉ‚ÇÇ_Minus = exp(log(Œ®mMac_Mode) - PœÉ‚ÇÇ * œÉMac)

			# Œ®mMac_PœÉ‚ÇÉ_Plus  = exp(log(Œ®mMac_Mode) + PœÉ‚ÇÉ * œÉMac)
			# Œ®mMac_PœÉ‚ÇÉ_Minus = exp(log(Œ®mMac_Mode) - PœÉ‚ÇÉ * œÉMac)

			# Œ®m_PœÉ‚ÇÇ_Plus     = exp(log(Œ®m_Mode) + PœÉ‚ÇÇ * œÉ)
			# Œ®m_PœÉ‚ÇÇ_Minus    = exp(log(Œ®m_Mode) - PœÉ‚ÇÇ * œÉ)

			# Œ®m_PœÉ‚ÇÉ_Plus     = exp(log(Œ®m_Mode) + PœÉ‚ÇÉ * œÉ)
			