
Path =  "D:\\MAIN\\MODELS\\AquaPore_Toolkit\\src\\"

# include(Path * "Including.jl")
include(Path * "Cst.jl")
include(Path * "hydro//HydroRelation.jl")
include(Path * "hydro//Wrc.jl")
include(Path * "hydro//Kunsat.jl")

module pumiceManuscript
	using CairoMakie, ColorSchemes
	import SpecialFunctions: erfc, erfcinv

	import ..wrc, ..kunsat, ..hydroRelation, ..cst

	export PLOTTING_PORESIZE

	PœÉ‚ÇÅ = 1.0
	PœÉ‚ÇÇ = 2.0
	PœÉ‚ÇÉ = 3.0
	PœÉ‚ÇÑ = 4.0


	# ------------------------------------------------------------------

	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	#		FUNCTION : HydroModels
	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		function HYDRO_MODELS(;Œ∏s, Œ∏sMacMat_Œ∑, Œ∏r=0.0, œÉ, Ks, Œ®macMat, œÑa=0.5, œÑb, œÑc, œÑaMac=0.5, œÑbMac, œÑcMac, KosugiModel_Œ∏Œ®‚ç∞, Option_KosugiModel_KŒ®‚ç∞, PœÉ=3, PœÉ_Mac=3)

			Œ∏sMacMat   = (Œ∏s - Œ∏r) * Œ∏sMacMat_Œ∑ + Œ∏r

			# Deriving macropore hydraulic parameters from Œ®macMat
				œÉMac    = hydroRelation.FUNC_Œ®macMat_2_œÉMac(;Œ®macMat=Œ®macMat, PœÉ_Mac=3)
				Œ®mMac   = hydroRelation.FUNC_Œ®macMat_2_Œ®mMac(;Œ®macMat=Œ®macMat, œÉMac)

				Œ®m_Min  = hydroRelation.FUNC_œÉ_2_Œ®m(;Œ®macMat= Œ®macMat, œÉ, PœÉ=PœÉ‚ÇÉ, üéè_Min=true)
				Œ®m_Max  = hydroRelation.FUNC_œÉ_2_Œ®m(;Œ®macMat=Œ®macMat, œÉ, PœÉ=PœÉ‚ÇÉ, üéè_Min=false)

				Tb_Max = 2.0; Tc_Max = 4.0
				Tb    = Tb_Max * (1.0 - œÑb)
				TbMac = Tb_Max * (1.0 - œÑbMac)
				Tc    = Tc_Max * (1.0 - œÑc)
				# Tc= œÉ ^ -0.59
				TcMac = Tc_Max * (1.0 - œÑcMac)
			
				KsMac_Min, KsMat_Min = kunsat.kg.KS_MATMAC_Œ®macMat(Œ∏s, Œ∏sMacMat, Œ∏r, Œ®m_Min, œÉ, Œ®mMac, œÉMac, Ks, Tb, Tc, TbMac, TcMac, KosugiModel_Œ∏Œ®‚ç∞)
				KsMac_Max, KsMat_Max = kunsat.kg.KS_MATMAC_Œ®macMat(Œ∏s, Œ∏sMacMat, Œ∏r, Œ®m_Max, œÉ, Œ®mMac, œÉMac, Ks, Tb, Tc, TbMac, TcMac, KosugiModel_Œ∏Œ®‚ç∞)

			#  For every œà
            Œ®_Min_Log = log10(0.0001)
            Œ®_Max_Log = log10(1500_00)

				Œ® = 10.0.^(collect(Œ®_Min_Log:0.0001:Œ®_Max_Log))
				N = length(Œ®)

			# Initiating
            Kunsat_Min = Array{Float64}(undef, N)
            Kunsat_Max = Array{Float64}(undef, N)
            Œ∏Dual_Min  = Array{Float64}(undef, N)
            Œ∏Dual_Max  = Array{Float64}(undef, N)

			# Looping
			for iŒ®=1:N
		
				# ‚àÇŒ∏‚àÇŒ®_1[iŒ®] = wrc.kg.‚àÇŒ∏‚àÇŒ®_NORM(Œ®‚ÇÅ=Œ®[iŒ®], Œ∏s=Œ∏s, Œ∏r=Œ∏r, Œ®m=Œ®m_Min, œÉ=œÉ, Œ∏sMacMat=Œ∏sMacMat, Œ®mMac=Œ®mMac, Œ®macMat=Œ®macMat, œÉMac=œÉMac)

				# ‚àÇŒ∏‚àÇŒ®_2[iŒ®] =  wrc.kg.‚àÇŒ∏‚àÇŒ®_NORM(Œ®‚ÇÅ=Œ®[iŒ®], Œ∏s=Œ∏s, Œ∏r=Œ∏r,  Œ®m=Œ®m_Max, œÉ=œÉ, Œ∏sMacMat=Œ∏sMacMat, Œ®mMac=Œ®mMac, Œ®macMat=Œ®macMat, œÉMac=œÉMac)

				Œ∏Dual_Min[iŒ®] = wrc.kg.Œ®_2_Œ∏(;Œ®‚ÇÅ=Œ®[iŒ®], Œ∏s, Œ∏sMacMat, Œ∏r, Œ®m=Œ®m_Min, œÉ, Œ®mMac, Œ®macMat, œÉMac, KosugiModel_Œ∏Œ®‚ç∞)

				
				Œ∏Dual_Max[iŒ®] = wrc.kg.Œ®_2_Œ∏(;Œ®‚ÇÅ=Œ®[iŒ®], Œ∏s, Œ∏sMacMat, Œ∏r, Œ®m=Œ®m_Max, œÉ, Œ®mMac, Œ®macMat, œÉMac, KosugiModel_Œ∏Œ®‚ç∞)

				Kunsat_Min[iŒ®] = kunsat.kg.KUNSAT_Œ∏Œ®Se(;Œ®‚ÇÅ=Œ®[iŒ®], Œ∏s=Œ∏s, Œ∏r=Œ∏r, Œ®m=Œ®m_Min, œÉ=œÉ, Œ∏sMacMat=Œ∏sMacMat, Œ®mMac=Œ®mMac, Œ®macMat=Œ®macMat, œÉMac=œÉMac, Ks=Ks, œÑa=œÑa, œÑb=œÑb, œÑc=œÑc, œÑaMac=œÑaMac, œÑbMac=œÑbMac, œÑcMac=œÑcMac, Option_KosugiModel_KŒ®‚ç∞, KosugiModel_Œ∏Œ®‚ç∞)

				Kunsat_Max[iŒ®] = kunsat.kg.KUNSAT_Œ∏Œ®Se(;Œ®‚ÇÅ=Œ®[iŒ®], Œ∏s=Œ∏s, Œ∏r=Œ∏r, Œ®m=Œ®m_Max, œÉ=œÉ, Œ∏sMacMat=Œ∏sMacMat,Œ®mMac=Œ®mMac, Œ®macMat=Œ®macMat, œÉMac=œÉMac, Ks=Ks, œÑa=œÑa, œÑb=œÑb, œÑc=œÑc, œÑaMac=œÑaMac, œÑbMac=œÑbMac, œÑcMac=œÑcMac, Option_KosugiModel_KŒ®‚ç∞, KosugiModel_Œ∏Œ®‚ç∞)
			end
			
		return Ks, KsMac_Max, KsMac_Max, KsMac_Min, KsMac_Min, KsMat_Max, KsMat_Min, Kunsat_Max, Kunsat_Min, N, PœÉ_Mac, Œ∏Dual_Max, Œ∏Dual_Min, Œ∏s, Œ∏sMacMat, œÉ, Œ®, Œ®macMat
		end  # function: HydroModels
	# ------------------------------------------------------------------


	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	#		FUNCTION : PLOTTING_PORESIZE
	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	function PLOTTING_PORESIZE()

		# Plotting parameters
         ColourOption_No    = 8
         Linewidth          = 2
         height             = 200
         labelsize          = 12
         textcolor          = :blue
         textsize           = 17
         titlecolor         = :darkgoldenrod4
         titlesize          = 20.0
         width              = height * 3.0
         xgridstyle         = :dash
         xgridvisible       = true
         xlabelSize         = 20
         xlabelpadding      = 5
         xminortickalign    = 1.0
         xminorticksvisible = true
         xtickalign         = 0.9 # 0 is inside and 1 is outside
         xticklabelrotation = œÄ/4
         xticksize          = 10
         xticksmirrored     = false
         xtickwidt          = 0.5
         xtrimspine         = false
         ygridstyle         = :dash
         ygridvisible       = false
         ylabelpadding      = xlabelpadding
         ylabelsize         = xlabelSize
         yminortickalign    = xminortickalign
         yminorticksvisible = true
         ytickalign         = xtickalign
         yticksize          = xticksize
         yticksmirrored     = false
         ytickwidt          = xtickwidt
         ytrimspine         = false

			ColourOption = [:glasbey_hv_n256,:seaborn_bright,:seaborn_colorblind,:seaborn_dark,:seaborn_deep,:tab10,:tableau_10,:tol_bright]

			Colormap = cgrad(colorschemes[ColourOption[ColourOption_No]], size(colorschemes[ColourOption[ColourOption_No]]), categorical = true)

			Œ®ticks = [0, 50, 100, 500, 1000,5000,100_00, 500_00, 1000_00, 2000_00] # mm

		# Starting to plot	
			CairoMakie.activate!(type="svg", pt_per_unit=1)
			Fig =  Figure(figure_padding = 10; fonts = ( ; regular="CMU Serif")) 


		Axis_Œ∏Œ® = Axis(Fig[1,1], xlabel= L"$œà$ [kPa]", ylabel=L"$Œ∏$ [L¬≥ L‚Åª¬≥]", title="Sandy soil", titlecolor=titlecolor, xticklabelrotation=xticklabelrotation, ylabelsize=ylabelsize, xlabelsize=xlabelSize, xticksize=xticksize, yticksize=yticksize, width=width, height=height,   titlesize=titlesize,  xgridvisible=xgridvisible, ygridvisible=ygridvisible, xminorticksvisible=xminorticksvisible, yminorticksvisible=yminorticksvisible, xtickwidth=xtickwidt, ytickwidth=ytickwidt, xtickalign=xtickalign, ytickalign=ytickalign, xticksmirrored=xticksmirrored, yticksmirrored=yticksmirrored,  xtrimspine=xtrimspine,  ytrimspine=ytrimspine, xgridstyle=xgridstyle, ygridstyle=ygridstyle, yminorticks=IntervalsBetween(5), xlabelpadding=xlabelpadding, ylabelpadding=ylabelpadding, xminortickalign=xminortickalign, yminortickalign=yminortickalign)

		Label(Fig[1, 1, TopRight()], "(A1)", fontsize=18, font=:bold, padding=(-50, 5, -50, 5), halign=:right)

		Ks, KsMac_Max, KsMac_Max, KsMac_Min, KsMac_Min, KsMat_Max, KsMat_Min, Kunsat_Max, Kunsat_Min, N, PœÉ_Mac, Œ∏Dual_Max, Œ∏Dual_Min, Œ∏s, Œ∏sMacMat, œÉ, Œ®, Œ®macMat =HYDRO_MODELS(Œ∏s=0.5, Œ∏sMacMat_Œ∑=0.75, Œ∏r=0.0, œÉ=1.0, Ks=0.08, Œ®macMat=100.0, œÑa=0.5, œÑb=0.6, œÑc=0.5, œÑaMac=0.5, œÑbMac=0.9, œÑcMac=0.03, KosugiModel_Œ∏Œ®‚ç∞="Œ®macMat", Option_KosugiModel_KŒ®‚ç∞="Œ®macMat")

				Label(Fig[1, 1:2, Top()], "Functions Œ∏(œà) & K(œà) macropore PœÉ_Mac=$PœÉ_Mac", valign=:bottom, font=:bold, padding=(0, 0,50, 0), color=:navajowhite4,  fontsize=titlesize*1.2)
					
				Œ®_Log = Array{Float64}(undef, N)
				for iZ=1:N
					Œ®_Log[iZ] = log1p(Œ®[iZ])
				end

				Axis_Œ∏Œ®.xticks = (log1p.(Œ®ticks), string.(cst.Mm_2_kPa .* Œ®ticks))
				hidexdecorations!(Axis_Œ∏Œ®, ticks=false, grid=false)

				lines!(Axis_Œ∏Œ®, Œ®_Log, Œ∏Dual_Min, linewidth=Linewidth, label="Macro œÉ =$œÉ, œà‚Çò_Min", color=Colormap[1], linestyle=:dashdot)
				lines!(Axis_Œ∏Œ®, Œ®_Log, Œ∏Dual_Max, linewidth=Linewidth, label="Macro œÉ =$œÉ, œà‚Çò_Max",  color=Colormap[1])

				lines!(Axis_Œ∏Œ®,[Point(log1p(Œ®macMat),0), Point(log1p(Œ®macMat), Œ∏s)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)
				lines!(Axis_Œ∏Œ®,[Point(log1p(0), Œ∏sMacMat ), Point(log1p(Œ®macMat), Œ∏sMacMat)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)
				lines!(Axis_Œ∏Œ®,[Point(log1p(0), Œ∏s), Point(log1p(Œ®macMat), Œ∏s)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)

				text!(log1p(0), Œ∏sMacMat, text =L"Œ∏_{sMacMat}", align=(:left,:top),  color=textcolor, fontsize=textsize)
				text!(log1p(0), Œ∏s, text =L"Œ∏_{s}", align=(:left,:top),  color=textcolor, fontsize=textsize)
				text!(log1p(Œ®macMat), 0, text =L"œà_{macMat}", align=(:left,:bottom), rotation = œÄ/2,  color=textcolor, fontsize=textsize)
				
				Ks_Trad, KsMac_Max_Trad, KsMac_Max_trad, KsMac_Min_Trad, KsMac_Min_Trad, KsMat_Max_Trad, KsMat_Min_trad, Kunsat_Max_Trad, Kunsat_Min_Trad, N, PœÉ_Mac, Œ∏Dual_Max_Trad, Œ∏Dual_Min_Trad, Œ∏s, Œ∏sMacMat, œÉ, Œ®, Œ®macMat = HYDRO_MODELS(;Œ∏s=0.5, Œ∏sMacMat_Œ∑=0.75, Œ∏r=0.0, œÉ=1.0, Ks=0.08, Œ®macMat=100.0, œÑa=0.5, œÑb=0.6, œÑc=0.6, œÑaMac=0.5, œÑbMac=0.6, œÑcMac=0.0, KosugiModel_Œ∏Œ®‚ç∞="Traditional", Option_KosugiModel_KŒ®‚ç∞="Traditional")

				lines!(Axis_Œ∏Œ®, Œ®_Log, Œ∏Dual_Min_Trad, linewidth=Linewidth, label="Trad œÉ =$œÉ, œà‚Çò_Min", color=Colormap[2], linestyle=:dashdot)
				lines!(Axis_Œ∏Œ®, Œ®_Log, Œ∏Dual_Max_Trad, linewidth=Linewidth, label="Trad œÉ =$œÉ, œà‚Çò_Max",  color=Colormap[2])


		Axis_KŒ® = Axis(Fig[2,1], xlabel=L"$œà$ [kPa]", ylabel=L"$K(œà)$ [cm h‚Åª¬π]", xticklabelrotation=xticklabelrotation, ylabelsize=ylabelsize,	xlabelsize=xlabelSize, xticksize=xticksize, yticksize=yticksize, width=width, height=height, xgridvisible=xgridvisible, ygridvisible=ygridvisible, xminorticksvisible=xminorticksvisible, yminorticksvisible=yminorticksvisible, xtickwidth=xtickwidt, ytickwidth=ytickwidt, xticksmirrored=xticksmirrored,  yticksmirrored=yticksmirrored, xtrimspine=xtrimspine,  ytrimspine=ytrimspine, xtickalign=xtickalign, ytickalign=ytickalign, yminorticks=IntervalsBetween(5), xgridstyle=xgridstyle, ygridstyle=ygridstyle, xlabelpadding=xlabelpadding, ylabelpadding=ylabelpadding, xminortickalign=xminortickalign, yminortickalign=yminortickalign)

			Label(Fig[2, 1, TopRight()], "(A2)", fontsize=18, font=:bold, padding = (-50, 5, -50, 5), halign=:right)

			Axis_KŒ®.xticks = (log1p.(Œ®ticks), string.(cst.Mm_2_kPa .* Œ®ticks))

			lines!(Axis_KŒ®, Œ®_Log , cst.MmS_2_CmH .* Kunsat_Min,  linewidth=Linewidth, color=Colormap[1], linestyle=:dashdot)
			lines!(Axis_KŒ®, Œ®_Log , cst.MmS_2_CmH .* Kunsat_Max, linewidth=Linewidth, color=Colormap[1])

			lines!(Axis_KŒ®, Œ®_Log , cst.MmS_2_CmH .* Kunsat_Min_Trad,  linewidth=Linewidth, color=Colormap[2], linestyle=:dashdot)
			lines!(Axis_KŒ®, Œ®_Log , cst.MmS_2_CmH .* Kunsat_Max_Trad, linewidth=Linewidth, color=Colormap[2])

			lines!(Axis_KŒ®,[Point(log1p(Œ®macMat),0), Point(log1p(Œ®macMat), cst.MmS_2_CmH .* Ks)], color=:navyblue, linewidth=Linewidth/2.0,  linestyle=:dash)
			lines!(Axis_KŒ®,[Point(log1p(0), cst.MmS_2_CmH .* KsMat_Min ), Point(log1p(Œ®macMat), cst.MmS_2_CmH .*  KsMat_Min)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)
			lines!(Axis_KŒ®,[Point(log1p(0), cst.MmS_2_CmH .* KsMat_Max ), Point(log1p(Œ®macMat), cst.MmS_2_CmH .*  KsMat_Max)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)
			lines!(Axis_KŒ®,[Point(log1p(0),  cst.MmS_2_CmH .* Ks), Point(log1p(Œ®macMat), cst.MmS_2_CmH .* Ks)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)

			text!(log1p(0),  cst.MmS_2_CmH .* KsMat_Min, text =L"K_{sMacMin}", align=(:left,:top), color=textcolor, fontsize=textsize)
			text!(log1p(0),  cst.MmS_2_CmH .* KsMat_Max, text =L"K_{sMacMax}", align=(:left,:top), color=textcolor, fontsize=textsize)
			text!(log1p(0),  cst.MmS_2_CmH .* Ks, text =L"K_{s}", align=(:left,:top), color=textcolor, fontsize=textsize)
			text!(log1p(Œ®macMat), 0, text =L"œà_{macMat}", align=(:left,:bottom), rotation = œÄ/2, color=textcolor, fontsize=textsize)

			# Legend
				Legend(Fig[3,1], Axis_Œ∏Œ®, framecolor=(:grey, 0.5), labelsize=labelsize, valign=:top, padding=5, tellheight=true, tellwidt=true, nbanks=2, backgroundcolor = (:grey90, 0.25))

		# ========================================

		Axis_Œ∏Œ®2 = Axis(Fig[1,2], xlabel= L"$œà$ [kPa]", ylabel=L"$Œ∏$ [L¬≥ L‚Åª¬≥]", title="Clay soils",  titlecolor=titlecolor, xticklabelrotation=xticklabelrotation, ylabelsize=ylabelsize, xlabelsize=xlabelSize, xticksize=xticksize, yticksize=yticksize, width=width, height=height, titlesize=titlesize,  xgridvisible=xgridvisible, ygridvisible=ygridvisible, xminorticksvisible=xminorticksvisible, yminorticksvisible=yminorticksvisible, xtickwidth=xtickwidt, ytickwidth=ytickwidt, xtickalign=xtickalign, ytickalign=ytickalign, xticksmirrored=xticksmirrored, yticksmirrored=yticksmirrored,  xtrimspine=xtrimspine,  ytrimspine=ytrimspine, xgridstyle=xgridstyle, ygridstyle=ygridstyle, yminorticks=IntervalsBetween(5), xlabelpadding=xlabelpadding, ylabelpadding=ylabelpadding, xminortickalign=xminortickalign, yminortickalign=yminortickalign)

			Label(Fig[1, 2, TopRight()], "(B1)", fontsize=18, font=:bold, padding=(-50, 5, -50, 5), halign=:right)

			Ks, KsMac_Max, KsMac_Max, KsMac_Min, KsMac_Min, KsMat_Max, KsMat_Min, Kunsat_Max, Kunsat_Min, N, PœÉ_Mac, Œ∏Dual_Max, Œ∏Dual_Min, Œ∏s, Œ∏sMacMat, œÉ, Œ®, Œ®macMat =HYDRO_MODELS(Œ∏s=0.5, Œ∏sMacMat_Œ∑=0.75, Œ∏r=0.0, œÉ=3.0, Ks=0.08, Œ®macMat=100.0, œÑa=0.5, œÑb=0.5, œÑc=0.6, œÑaMac=0.5, œÑbMac=0.6, œÑcMac=0.0, KosugiModel_Œ∏Œ®‚ç∞="Œ®macMat", Option_KosugiModel_KŒ®‚ç∞="Œ®macMat")

				Œ®_Log = Array{Float64}(undef, N)
				for iZ=1:N
					Œ®_Log[iZ] = log1p(Œ®[iZ])
				end

				Axis_Œ∏Œ®2.xticks = (log1p.(Œ®ticks), string.(cst.Mm_2_kPa .* Œ®ticks))
				hidexdecorations!(Axis_Œ∏Œ®2, ticks=false, grid=false)

				lines!(Axis_Œ∏Œ®2, Œ®_Log, Œ∏Dual_Min, linewidth=Linewidth, label="Macro œÉ =$œÉ, œà‚Çò_Min", color=Colormap[3], linestyle=:dashdot)
				lines!(Axis_Œ∏Œ®2, Œ®_Log, Œ∏Dual_Max, linewidth=Linewidth, label="Macro œÉ =$œÉ, œà‚Çò_Max",  color=Colormap[3])

				lines!(Axis_Œ∏Œ®2,[Point(log1p(Œ®macMat),0), Point(log1p(Œ®macMat), Œ∏s)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)
				lines!(Axis_Œ∏Œ®2,[Point(log1p(0), Œ∏sMacMat ), Point(log1p(Œ®macMat), Œ∏sMacMat)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)
				lines!(Axis_Œ∏Œ®2,[Point(log1p(0), Œ∏s), Point(log1p(Œ®macMat), Œ∏s)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)

				text!(log1p(0), Œ∏sMacMat, text =L"Œ∏_{sMacMat}", align=(:left,:top),  color=textcolor, fontsize=textsize)
				text!(log1p(0), Œ∏s, text =L"Œ∏_{s}", align=(:left,:top),  color=textcolor, fontsize=textsize)
				text!(log1p(Œ®macMat), 0, text =L"œà_{macMat}", align=(:left,:bottom), rotation = œÄ/2,  color=textcolor, fontsize=textsize)
				
				Ks_Trad, KsMac_Max_Trad, KsMac_Max_trad, KsMac_Min_Trad, KsMac_Min_Trad, KsMat_Max_Trad, KsMat_Min_trad, Kunsat_Max_Trad, Kunsat_Min_Trad, N, PœÉ_Mac, Œ∏Dual_Max_Trad, Œ∏Dual_Min_Trad, Œ∏s, Œ∏sMacMat, œÉ, Œ®, Œ®macMat = HYDRO_MODELS(;Œ∏s=0.5, Œ∏sMacMat_Œ∑=0.75, Œ∏r=0.0, œÉ=3.0, Ks=0.08, Œ®macMat=100.0, œÑa=0.5, œÑb=0.6, œÑc=0.6, œÑaMac=0.5, œÑbMac=0.6, œÑcMac=0.0, KosugiModel_Œ∏Œ®‚ç∞="Traditional", Option_KosugiModel_KŒ®‚ç∞="Traditional")

				lines!(Axis_Œ∏Œ®2, Œ®_Log, Œ∏Dual_Min_Trad, linewidth=Linewidth, label="Trad œÉ =$œÉ, œà‚Çò_Min", color=Colormap[4], linestyle=:dashdot)
				lines!(Axis_Œ∏Œ®2, Œ®_Log, Œ∏Dual_Max_Trad, linewidth=Linewidth, label="Trad œÉ =$œÉ, œà‚Çò_Max",  color=Colormap[4])


		Axis_KŒ®2 = Axis(Fig[2,2], xlabel=L"$œà$ [kPa]", ylabel=L"$K(œà)$ [cm h‚Åª¬π]", xticklabelrotation=xticklabelrotation, ylabelsize=ylabelsize,	xlabelsize=xlabelSize, xticksize=xticksize, yticksize=yticksize, width=width, height=height, xgridvisible=xgridvisible, ygridvisible=ygridvisible, xminorticksvisible=xminorticksvisible, yminorticksvisible=yminorticksvisible, xtickwidth=xtickwidt, ytickwidth=ytickwidt, xticksmirrored=xticksmirrored,  yticksmirrored=yticksmirrored, xtrimspine=xtrimspine,  ytrimspine=ytrimspine, xtickalign=xtickalign, ytickalign=ytickalign, yminorticks=IntervalsBetween(5), xgridstyle=xgridstyle, ygridstyle=ygridstyle, xlabelpadding=xlabelpadding, ylabelpadding=ylabelpadding, xminortickalign=xminortickalign, yminortickalign=yminortickalign )

			Label(Fig[2, 2, TopRight()], "(B2)", fontsize=18, font=:bold, padding = (-50, 5, -50, 5), halign=:right)

			Axis_KŒ®2.xticks = (log1p.(Œ®ticks), string.(cst.Mm_2_kPa .* Œ®ticks))

			lines!(Axis_KŒ®2, Œ®_Log , cst.MmS_2_CmH .* Kunsat_Min,  linewidth=Linewidth, color=Colormap[3], linestyle=:dashdot)
			lines!(Axis_KŒ®2, Œ®_Log , cst.MmS_2_CmH .* Kunsat_Max, linewidth=Linewidth, color=Colormap[3])

			lines!(Axis_KŒ®2, Œ®_Log , cst.MmS_2_CmH .* Kunsat_Min_Trad,  linewidth=Linewidth, color=Colormap[4], linestyle=:dashdot)
			lines!(Axis_KŒ®2, Œ®_Log , cst.MmS_2_CmH .* Kunsat_Max_Trad, linewidth=Linewidth, color=Colormap[4])

			lines!(Axis_KŒ®2,[Point(log1p(Œ®macMat),0), Point(log1p(Œ®macMat), cst.MmS_2_CmH .* Ks)], color=:navyblue, linewidth=Linewidth/2.0,  linestyle=:dash)
			lines!(Axis_KŒ®2,[Point(log1p(0), cst.MmS_2_CmH .* KsMat_Min ), Point(log1p(Œ®macMat), cst.MmS_2_CmH .*  KsMat_Min)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)
			lines!(Axis_KŒ®2,[Point(log1p(0), cst.MmS_2_CmH .* KsMat_Max ), Point(log1p(Œ®macMat), cst.MmS_2_CmH .*  KsMat_Max)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)
			lines!(Axis_KŒ®2,[Point(log1p(0),  cst.MmS_2_CmH .* Ks), Point(log1p(Œ®macMat), cst.MmS_2_CmH .* Ks)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)

			text!(log1p(0),  cst.MmS_2_CmH .* KsMat_Min, text =L"K_{sMacMin}", align=(:left,:top), color=textcolor, fontsize=textsize)
			text!(log1p(0),  cst.MmS_2_CmH .* KsMat_Max, text =L"K_{sMacMax}", align=(:left,:top), color=textcolor, fontsize=textsize)
			text!(log1p(0),  cst.MmS_2_CmH .* Ks, text =L"K_{s}", align=(:left,:top), color=textcolor, fontsize=textsize)
			text!(log1p(Œ®macMat), 0, text =L"œà_{macMat}", align=(:left,:bottom), rotation = œÄ/2, color=textcolor, fontsize=textsize)

			# Legend
				Legend(Fig[3,2], Axis_Œ∏Œ®2, framecolor=(:grey, 0.5), labelsize=labelsize, valign=:top, padding=5, tellheight=true, tellwidt=true, nbanks=2, backgroundcolor = (:grey90, 0.25))

			# General
				resize_to_layout!(Fig)
				trim!(Fig.layout)
				colgap!(Fig.layout, 10)
				rowgap!(Fig.layout, 10)

				Path = raw"D:\TEMP\Plots\MacroporeThetaH.svg"
				save(Path, Fig)
				display(Fig)

		
	return nothing
	end  # function: PLOTTING_PORESIZE



	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	#		FUNCTION : PLOTTING_KUNSAT_MACRO
	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	function PLOTTING_KUNSAT_MACRO()

		function RELATIONSHIPS_MAC(Œ®macMat; PœÉ_Mac=3)
			œÉMac    = hydroRelation.FUNC_Œ®macMat_2_œÉMac(;Œ®macMat, PœÉ_Mac)
			Œ®mMac   = hydroRelation.FUNC_Œ®macMat_2_Œ®mMac(;Œ®macMat=Œ®macMat, œÉMac)
		return œÉMac, Œ®mMac
		end  # function: RELATIONSHIPS_MAC

		function RELATIONSHIPS_MAT(Œ®macMat, œÉ; PœÉ=3)
			Œ®macMat‚ÇÇ = exp((log(‚àöŒ®macMat) + log(Œ®macMat)) * 0.5)
			Œ®m  = hydroRelation.FUNC_œÉ_2_Œ®m(;Œ®macMat=Œ®macMat‚ÇÇ, œÉ, PœÉ=PœÉ‚ÇÉ, üéè_Min=false)
		return Œ®m
		end

		function KUNSAT_MAT_Œ∑(;Œ®‚ÇÅ=Œ®‚ÇÅ, Œ∏s=1.0, Œ∏sMacMat=0.8, Œ∏r=0.0, œÉ, Œ®macMat, œÑb, œÑbMac, Ks=1.0, œÑa=0.5, œÑaMac=0.5, œÑc=1.0, œÑcMac=2.0)
			Œ®m = RELATIONSHIPS_MAT(Œ®macMat, œÉ)
			œÉMac, Œ®mMac = RELATIONSHIPS_MAC(Œ®macMat)

			Kunsat_Mat_Norm = kunsat.kg.KUNSAT_Œ∏Œ®Se(;Œ®‚ÇÅ=Œ®‚ÇÅ, Œ∏s, Œ∏sMacMat, Œ∏r, Œ®m, œÉ, Œ®mMac, Œ®macMat, œÉMac, Ks, œÑa, œÑb, œÑc, œÑaMac, œÑbMac, œÑcMac, Option_KosugiModel_KŒ®‚ç∞="Œ®macMat", KosugiModel_Œ∏Œ®‚ç∞="Œ®macMat")

			Ta, Tb, Tc, TaMac, TbMac, TcMac = kunsat.kg.TORTUOSITY(; œÉ, œÑa, œÑaMac, œÑb, œÑbMac, œÑc, œÑcMac)
	
			KsMac, KsMat = kunsat.kg.KS_MATMAC_Œ®macMat(Œ∏s::Float64, Œ∏sMacMat::Float64, Œ∏r::Float64, Œ®m::Float64, œÉ::Float64, Œ®mMac::Float64, œÉMac::Float64, Ks::Float64, Tb::Float64, Tc::Float64, TbMac::Float64, TcMac::Float64,  "Œ®macMat")

		return KsMat, Kunsat_Mat_Norm
		end

		# Parameters
         Œ∏s = 1.0
         Œ∏r = 0.0
         Ks = 1.0

		#  For every œà
			Œ®_Min_Log = log10(0.0001)
			Œ®_Max_Log = log10(1500_00.0)
			Œ® = 10.0.^(collect(Œ®_Min_Log:0.0001:Œ®_Max_Log))
			N_Œ®  = length(Œ®)

			œÉ =  collect(range(0.75, stop=3.5, length=3))
			N_œÉ = length(œÉ)

			Texture = ["Sandy soils", "Silty soils", "Clay soils"] 

			Tb2 = collect(range(0.0, stop=1.0, length=5))
			N_Tb = length(Tb2)

			Œ®macMat = collect(range(60.0, stop=100.0, length=3))
			N_Œ®macMat = length(Œ®macMat)

			# Œ∏sMacMat_Œ∑ = collect(range(0.75, stop=1.0, length=4))
			# N_Œ∏sMacMat_Œ∑  = length(Œ∏sMacMat_Œ∑)
      	# Œ∏sMacMat = Œ∏s .* Œ∏sMacMat_Œ∑

			# KsMac = zeros(100)


		
		# FUNCTION Kunsat_Tb
         KunsatMat_Tb = zeros(N_Œ®, N_œÉ, N_Tb, N_Œ®macMat)
         KsMatrice    = zeros(N_œÉ, N_Tb, N_Œ®macMat)
			
			for (iiŒ®, iŒ®) in enumerate(Œ®), (iiœÉ, iœÉ) in enumerate(œÉ), (iiTb, iTb) in enumerate(Tb2), (iiŒ®macMat, iŒ®macMat) in enumerate(Œ®macMat)

			 	KsMatrice[iiœÉ, iiTb, iiŒ®macMat], KunsatMat_Tb[iiŒ®, iiœÉ, iiTb, iiŒ®macMat] = KUNSAT_MAT_Œ∑(;Œ®‚ÇÅ=iŒ®, œÉ=iœÉ, œÑb=iTb, œÑbMac=iTb, Œ®macMat=iŒ®macMat)
			end

		# ================================================================
				# Plotting parameters
         ColourOption_No    = 1
         Linewidth          = 2
         height             = 200
         labelsize          = 16
         textcolor          = :blue
         textsize           = 17
         titlecolor         = :navyblue
         titlesize          = 18.0
         width              = height * 3.0
         xgridstyle         = :dash
         xgridvisible       = true
         xlabelSize         = 20
         xlabelpadding      = 5
         xminortickalign    = 1.0
         xminorticksvisible = true
         xtickalign         = 0.9 # 0 is inside and 1 is outside
         xticklabelrotation = œÄ/4
         xticksize          = 10
         xticksmirrored     = false
         xtickwidt          = 0.5
         xtrimspine         = false
         ygridstyle         = :dash
         ygridvisible       = false
         ylabelpadding      = xlabelpadding
         ylabelsize         = xlabelSize
         yminortickalign    = xminortickalign
         yminorticksvisible = true
         ytickalign         = xtickalign
         yticksize          = xticksize
         yticksmirrored     = false
         ytickwidt          = xtickwidt
         ytrimspine         = false

			ColourOption = [:glasbey_hv_n256,:seaborn_bright,:seaborn_colorblind,:seaborn_dark,:seaborn_deep,:tab10,:tableau_10,:tol_bright]

			Colormap = cgrad(colorschemes[ColourOption[ColourOption_No]], size(colorschemes[ColourOption[ColourOption_No]]), categorical = true)

			Œ®ticks = [0, 50, 100, 500, 1000,5000,100_00, 500_00, 1000_00, 1500_00] # mm

			Œ®_Log = Array{Float64}(undef, N_Œ®)
				for iZ=1:N_Œ®
					Œ®_Log[iZ] = log1p(Œ®[iZ])
				end

		# Starting to plot	
			CairoMakie.activate!(type="svg", pt_per_unit=1)
			Fig =  Figure(figure_padding = 10; fonts = ( ; regular="CMU Serif"), backgroundcolor = :seashell2) 

			Label(Fig[1, 1:N_œÉ, Top()], "Macropore parsimenous K(Œ∏) model", valign=:bottom, font=:bold, padding=(0, 0, 50, 0), color=:darkblue,  fontsize=titlesize*1.2)

			Axis_KunsatMat_Tb = []
			for (iiœÉ, iœÉ) in enumerate(œÉ)
				for(iiŒ®macMat, iŒ®macMat) in enumerate(Œ®macMat)

				if iiœÉ==1
					Label(Fig[iiœÉ, iiŒ®macMat, TopRight()], "($iiœÉ-$iiŒ®macMat)", fontsize=18, font=:bold, padding=(-50, 5, -100, 10), halign=:right)
					else
						Label(Fig[iiœÉ, iiŒ®macMat, TopRight()], "($iiœÉ-$iiŒ®macMat)", fontsize=18, font=:bold, padding=(-50, 5, -50, 10), halign=:right)
					end

					Axis_KunsatMat_Tb = Axis(Fig[iiœÉ, iiŒ®macMat], xlabel= L"$œà$ [kPa]", ylabel=L"$K_{unsat}$ [L¬≥ L‚Åª¬≥]", title="$(Texture[iiœÉ]) Œ®macMat=$(Int32(floor(iŒ®macMat, digits=0))) mm" ,  titlecolor=titlecolor, xticklabelrotation=xticklabelrotation, ylabelsize=ylabelsize, xlabelsize=xlabelSize, xticksize=xticksize, yticksize=yticksize, width=width, height=height, titlesize=titlesize,  xgridvisible=xgridvisible, ygridvisible=ygridvisible, xminorticksvisible=xminorticksvisible, yminorticksvisible=yminorticksvisible, xtickwidth=xtickwidt, ytickwidth=ytickwidt, xtickalign=xtickalign, ytickalign=ytickalign, xticksmirrored=xticksmirrored, yticksmirrored=yticksmirrored, xtrimspine=xtrimspine,  ytrimspine=ytrimspine, xgridstyle=xgridstyle, ygridstyle=ygridstyle, yminorticks=IntervalsBetween(5), xlabelpadding=xlabelpadding, ylabelpadding=ylabelpadding, xminortickalign=xminortickalign, yminortickalign=yminortickalign)

						Axis_KunsatMat_Tb.xticks = (log1p.(Œ®ticks), string.(cst.Mm_2_kPa .* Œ®ticks))

						if iiœÉ < N_œÉ
							hidexdecorations!(Axis_KunsatMat_Tb, ticks=false, grid=false)
						end

						if iiŒ®macMat > 1
							hideydecorations!(Axis_KunsatMat_Tb, ticks=false, grid=false)
						end

						for (iiTb, iTb) in enumerate(Tb2)
							lines!(Fig[iiœÉ, iiŒ®macMat], Œ®_Log, KunsatMat_Tb[:, iiœÉ, iiTb, iiŒ®macMat], linewidth=Linewidth, color=Colormap[iiTb], label="œÉ =$(floor(œÉ[iiœÉ], digits=2)) Tb=$(floor(iTb, digits=2))")

							lines!(Axis_KunsatMat_Tb,[Point(log1p(0.0), KsMatrice[iiœÉ, iiTb, iiŒ®macMat] ), Point(log1p(Œ®macMat[iiŒ®macMat]), KsMatrice[iiœÉ, iiTb, iiŒ®macMat])], color=Colormap[iiTb], linewidth=Linewidth/2.0, linestyle=:dash)
						end

						lines!(Axis_KunsatMat_Tb,[Point(log1p(Œ®macMat[iiŒ®macMat]), 0.0), Point(log1p(Œ®macMat[iiŒ®macMat]), 1.0)], color=:navyblue, linewidth=Linewidth/2.0, linestyle=:dash)
	
				end # for(iiŒ®macMat, iŒ®macMat) in enumerate(Œ®macMat)

				Legend(Fig[iiœÉ,N_Œ®macMat+1], Axis_KunsatMat_Tb, framecolor=(:grey, 0.5), labelsize=labelsize, valign=:top, padding=5, tellheight=true, tellwidt=true, nbanks=1, backgroundcolor=:seashell
)
			end # for (iiœÉ, iœÉ) in enumerate(œÉ)

			# General
				resize_to_layout!(Fig)
				trim!(Fig.layout)
				colgap!(Fig.layout, 10)
				rowgap!(Fig.layout, 10)

				Path = raw"D:\TEMP\Plots\MacroKunsat.svg"
				save(Path, Fig)
				display(Fig)
		
	return nothing
	end  # function: name
	# ------------------------------------------------------------------


end #module pumiceManuscript
# ------------------------------------------------------------------


 pumiceManuscript.PLOTTING_KUNSAT_MACRO()

#   include(raw"D:\MAIN\MODELS\AquaPore_Toolkit\src\Temporary\Manuscript\PumiceManuscript.jl")



# include( raw"D:\MAIN\MODELS\AquaPore_Toolkit\src\Temporary\Manuscript\PumiceManuscript.jl")

		
		# Axis_‚àÇŒ∏‚àÇR = Axis(Fig[1,1], xlabel="R [mm]", ylabel="‚àÇŒ∏‚àÇR", xscale=log,  xminorticksvisible = true, xminorgridvisible = true, xminorticks = IntervalsBetween(5))

		# # , yscale=log10, titlesize=30, xlabelsize=XlabelSize, ylabelsize=YlabelSize, xgridvisible=true, xticklabelrotation = pi/2, 
		# 	# Axis_‚àÇŒ∏‚àÇR.xticks = (cst.Y ./ TableComplete_Œ∏Œ®, string.((round.(cst.Y ./ TableComplete_Œ∏Œ®, digits = 2))))

		# 	# xlims!(Axis_‚àÇŒ∏‚àÇR, cst.Y / Œ®_Max, cst.Y / Œ®_Min)
		# 	Plot1=lines!(Axis_‚àÇŒ∏‚àÇR, cst.Y ./  Œ® , ‚àÇŒ∏‚àÇR_1,  color=:green, linewidth=Linewidth, label="")
		# 	Plot2=lines!(Axis_‚àÇŒ∏‚àÇR,  cst.Y ./ Œ® , ‚àÇŒ∏‚àÇR_2, color=:blue, linewidth=Linewidth, label="")

		# Axis_‚àÇŒ∏‚àÇŒ® = Axis(Fig[1,1], xlabel="Œ® [mm]", ylabel="‚àÇŒ∏‚àÇŒ®", xscale=log)
		# 	# titlesize=30, xlabelsize=XlabelSize, ylabelsize=YlabelSize, xgridvisible=false, ygridvisible=false,xminorticksvisible=true, yminorticksvisible=true, xticklabelrotation = pi/2
			
		# 	# Axis_‚àÇŒ∏‚àÇŒ®.xticks = (TableComplete_Œ∏Œ®, string.(round.(TableComplete_Œ∏Œ®, digits=1)))
		# 	# xlims!(Axis_‚àÇŒ∏‚àÇŒ®, Œ®_Min, Œ®_Max)
		# 	Plot3 = lines!(Axis_‚àÇŒ∏‚àÇŒ®, Œ® , ‚àÇŒ∏‚àÇŒ®_1,  color=:green, linewidth=Linewidth, label="")
		# 	Plot4 = lines!(Axis_‚àÇŒ∏‚àÇŒ®, Œ® , ‚àÇŒ∏‚àÇŒ®_2, color=:blue, linewidth=Linewidth, label="")

			# lines!(Axis_‚àÇŒ∏‚àÇŒ®, [Point(Œ®m_Min_Mode,0), Point(Œ®m_Min_Mode, 1)], color=:green, linewidth=Linewidth)
			# lines!(Axis_‚àÇŒ∏‚àÇŒ®, [Point(Œ®m_Max_Mode,0), Point(Œ®m_Max_Mode, 1)], color=:blue, linewidth=Linewidth)
			# lines!(Axis_‚àÇŒ∏‚àÇŒ®, [Point(Œ®mMac_Mode,0), Point(Œ®mMac_Mode, 1)], color=:navyblue, linewidth=Linewidth)
			# lines!(Axis_‚àÇŒ∏‚àÇŒ®, [Point(Œ®macMat,0), Point(Œ®macMat, 0.5)], color=:red, linewidth=Linewidth)

			# lines!(Axis_‚àÇŒ∏‚àÇŒ®, [Point(Œ®mMac_PœÉ‚ÇÇ_Plus,0), Point(Œ®mMac_PœÉ‚ÇÇ_Plus, 1.0)], color=:violet)
			# lines!(Axis_‚àÇŒ∏‚àÇŒ®, [Point(Œ®mMac_PœÉ‚ÇÇ_Minus,0), Point(Œ®mMac_PœÉ‚ÇÇ_Minus, 1.0)], color=:violet)

			# lines!(Axis_‚àÇŒ∏‚àÇŒ®, [Point(Œ®mMac_PœÉ‚ÇÉ_Plus,0), Point(Œ®mMac_PœÉ‚ÇÉ_Plus, 0.8)], color=:violet)
			# lines!(Axis_‚àÇŒ∏‚àÇŒ®, [Point(Œ®mMac_PœÉ‚ÇÉ_Minus,0), Point(Œ®mMac_PœÉ‚ÇÉ_Minus, 0.8)], color=:violet)


			
			# lines!(Axis_‚àÇŒ∏‚àÇŒ®, [Point(Œ®m_PœÉ‚ÇÇ_Plus,0), Point(Œ®m_PœÉ‚ÇÇ_Plus, 1.0)], color=:blue)
			# lines!(Axis_‚àÇŒ∏‚àÇŒ®, [Point(Œ®m_PœÉ‚ÇÇ_Minus,0), Point(Œ®m_PœÉ‚ÇÇ_Minus, 1.0)], color=:blue)

			# lines!(Axis_‚àÇŒ∏‚àÇŒ®, [Point(Œ®m_PœÉ‚ÇÉ_Plus,0), Point(Œ®m_PœÉ‚ÇÉ_Plus, 0.8)], color=:blue)
			# lines!(Axis_‚àÇŒ∏‚àÇŒ®, [Point(Œ®m_PœÉ‚ÇÉ_Minus,0), Point(Œ®m_PœÉ‚ÇÉ_Minus, 0.8)], color=:blue)

						# Modes
			# Œ®m_Min_Mode = hydroRelation.FUNC_Œ®mMode(;Œ®m‚ÇÄ=Œ®m_Min, œÉ‚ÇÄ=œÉ)
			# Œ®m_Max_Mode = hydroRelation.FUNC_Œ®mMode(;Œ®m‚ÇÄ=Œ®m_Max, œÉ‚ÇÄ=œÉ)
			# Œ®mMac_Mode  = hydroRelation.FUNC_Œ®mMode(;Œ®m‚ÇÄ=Œ®mMac, œÉ‚ÇÄ=œÉMac)
			# Œ®m_Mode     = hydroRelation.FUNC_Œ®mMode(;Œ®m‚ÇÄ=Œ®m_Max, œÉ‚ÇÄ=œÉ)

		# For plotting
			# Œ®mMac_PœÉ‚ÇÇ_Plus  = exp(log(Œ®mMac_Mode) + PœÉ‚ÇÇ * œÉMac)
			# Œ®mMac_PœÉ‚ÇÇ_Minus = exp(log(Œ®mMac_Mode) - PœÉ‚ÇÇ * œÉMac)

			# Œ®mMac_PœÉ‚ÇÉ_Plus  = exp(log(Œ®mMac_Mode) + PœÉ‚ÇÉ * œÉMac)
			# Œ®mMac_PœÉ‚ÇÉ_Minus = exp(log(Œ®mMac_Mode) - PœÉ‚ÇÉ * œÉMac)

			# Œ®m_PœÉ‚ÇÇ_Plus     = exp(log(Œ®m_Mode) + PœÉ‚ÇÇ * œÉ)
			# Œ®m_PœÉ‚ÇÇ_Minus    = exp(log(Œ®m_Mode) - PœÉ‚ÇÇ * œÉ)

			# Œ®m_PœÉ‚ÇÉ_Plus     = exp(log(Œ®m_Mode) + PœÉ‚ÇÉ * œÉ)
			# Œ®m_PœÉ‚ÇÉ_Minus    = exp(log(Œ®m_Mode) - PœÉ‚ÇÉ * œÉ)




# 				using CairoMakie, LaTeXStrings, SpecialFunctions

# x = 0.1:0.1:15

