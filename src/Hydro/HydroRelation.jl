# =============================================================
#		MODULE: hydroRealation
# =============================================================
module hydroRelation
import BlackBoxOptim
import ..tool
export œÉ_2_Œ∏r, FUNCTION_œÉ_2_Œ®m_SOFTWARE, FUNC_Œ®macMat_2_Œ®mMac, FUNC_Œ∏sMacMatŒ∑_2_Œ®macMat, FUNC_Œ®macMat_2_œÉMac, FUNC_œÉ_2_Œ®m, FUNC_Œ®mMode, FUNC_Œ∏sMacMatŒ∑


	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	#		FUNCTION : name
	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	function FUNC_Œ∏sMacMatŒ∑(;Œ∏r, Œ∏s, Œ∏sMacMat)
		return Œ∏sMacMat_Œ∑ = min(max((Œ∏sMacMat - Œ∏r) / (Œ∏s - Œ∏r), 0.0), 1.0)
	end  # function: FUNC_Œ∏s_Œ∏r_2_Œ∏sMacMatŒ∑
	# ------------------------------------------------------------------


	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	#		FUNCTION : FUNC_Œ∏sMacMatŒ∑_2_Œ®macMat
	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		# function FUNC_Œ∏sMacMatŒ∑_2_Œ®macMat(;Œ∏s, Œ∏sMacMat, Œ∏r, Œ®macMat_Max=100.0, Œ®macMat_Min=0.0, Œ∏sMacMat_Œ∑_Tresh=1.0) 

		# 	# Œ∏sMacMat_Œ∑ = FUNC_Œ∏sMacMatŒ∑(;Œ∏r, Œ∏s, Œ∏sMacMat)

		# 	# if Œ∏sMacMat_Œ∑ ‚â• Œ∏sMacMat_Œ∑_Tresh
		# 	# 	Œ®macMat = ((Œ∏sMacMat_Œ∑ - 1.0) / (Œ∏sMacMat_Œ∑_Tresh - 1.0)) * (Œ®macMat_Max - Œ®macMat_Min) + Œ®macMat_Min
		# 	# else
		# 	# 	Œ®macMat = Œ®macMat_Max
		# 	# end
			
		# 	Œ®macMat = Œ®macMat_Max

		# 	return Œ®macMat
		# end  # function: FUNC_Œ∏sMacMatŒ∑_2_Œ®macMat
	# ------------------------------------------------------------------


	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	#		FUNCTION : FUNC_Œ®macMat_2_œÉMac
	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		function FUNC_Œ®macMat_2_œÉMac(;Œ®macMat, PœÉ_Mac=2)
			# return œÉMac = log1p(Œ®macMat) / (2.0 * PœÉ_Mac)
			return œÉMac = log(‚àö(Œ®macMat + 1.0)) / PœÉ_Mac
		end  # function: FUNC_Œ®macMat_2_œÉMac
	# ------------------------------------------------------------------


	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	#		FUNCTION : FUNC_Œ®macMat_2_Œ®mMac
	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		function FUNC_Œ®macMat_2_Œ®mMac(;Œ®macMat, œÉMac, Option_Mode=false)

			# Option 1: based on Mode of pore size distribution
				# LONG: Œ®mMac = exp(log(Œ®macMat) * 0.5 + œÉMac ^ 2.0)
				# LONG2 Œ®mMac = exp(log(sqrt(Œ®macMat)) + œÉMac ^ 2.0)
				# if Option_Mode
				# 	return Œ®mMac = ‚àö(Œ®macMat + 1.0) * exp(œÉMac ^ 2.0)
				# else 
					return Œ®mMac = ‚àö(Œ®macMat + 1.0)
				# end			
		end  # function: FUNC_Œ®macMat_2_Œ®mMac
	# ------------------------------------------------------------------


	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	#		FUNCTION : FUNC_œÉ_2_Œ®m
	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		function FUNC_œÉ_2_Œ®m(;Œ®macMat, œÉ, PœÉ, Œ®m_Min=Œ®macMat, Œ®m_Max=10.0^8, üéè_Min=false)
			# if Option_Mode
			# 	Œ®m = (1.0 + Œ®macMat) * exp(œÉ * PœÉ + œÉ^2)
			# else

			if üéè_Min
				Œ®m = (‚àöŒ®macMat) * exp(œÉ * PœÉ)
				Œ®m = min(max(Œ®m, Œ®macMat), Œ®m_Max)
			else
				Œ®m = Œ®macMat * exp(œÉ * PœÉ)
				Œ®m = min(Œ®m, Œ®m_Max)
			end

		return Œ®m
		end # function: FUNC_œÉ_2_Œ®m
	# ----------------------------------------------------------------


	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	#		FUNCTION : FUNCTION_œÉ_2_Œ®m_SOFTWARE
	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		function FUNCTION_œÉ_2_Œ®m_SOFTWARE(hydro‚ÇÇ, iZ, option‚ÇÇ, param; PœÉ=3.0, PœÉ_Mac=2)

			if option‚ÇÇ.Œ®macMat_2_œÉMac_Œ®mMac
				# Œ®macMat‚ÇÅ = FUNC_Œ∏sMacMatŒ∑_2_Œ®macMat(Œ∏s=hydro‚ÇÇ.Œ∏s[iZ], Œ∏sMacMat=hydro‚ÇÇ.Œ∏sMacMat[iZ], Œ∏r=hydro‚ÇÇ.Œ∏r[iZ], Œ®macMat_Max=hydro‚ÇÇ.Œ®macMat[iZ])
				Œ®macMat‚ÇÅ = hydro‚ÇÇ.Œ®macMat[iZ]
		
				# Deriving œÉMac
					hydro‚ÇÇ.œÉMac[iZ] = hydroRelation.FUNC_Œ®macMat_2_œÉMac(;Œ®macMat=hydro‚ÇÇ.Œ®macMat[iZ], PœÉ_Mac=PœÉ_Mac)

				# Deriving Œ®mMac
					hydro‚ÇÇ.Œ®mMac[iZ] =  hydroRelation.FUNC_Œ®macMat_2_Œ®mMac(;Œ®macMat=hydro‚ÇÇ.Œ®macMat[iZ], œÉMac=hydro‚ÇÇ.œÉMac[iZ])
			end
			
			#  Œ®macMat‚ÇÇ = hydro‚ÇÇ.Œ®macMat[iZ]

			if (option‚ÇÇ.œÉ_2_Œ®m‚ç∞ == "Constrained")
				# Deriving  Œ®m 
               Œ®m_Min        = hydroRelation.FUNC_œÉ_2_Œ®m(;Œ®macMat=hydro‚ÇÇ.Œ®macMat[iZ], œÉ=hydro‚ÇÇ.œÉ[iZ], PœÉ=PœÉ, Œ®m_Min=hydro‚ÇÇ.Œ®macMat[iZ], Œ®m_Max=hydro‚ÇÇ.Œ®m_Max[iZ], üéè_Min=true)

               Œ®m_Max        = hydroRelation.FUNC_œÉ_2_Œ®m(;Œ®macMat=hydro‚ÇÇ.Œ®macMat[iZ], œÉ=hydro‚ÇÇ.œÉ[iZ], PœÉ=PœÉ, Œ®m_Min=hydro‚ÇÇ.Œ®macMat[iZ], Œ®m_Max=hydro‚ÇÇ.Œ®m_Max[iZ], üéè_Min=false)
					
               hydro‚ÇÇ.Œ®m[iZ] = tool.norm.‚àáNORM_2_PARAMETER(hydro‚ÇÇ.Œ®m[iZ], Œ®m_Min, Œ®m_Max)

			elseif (option‚ÇÇ.œÉ_2_Œ®m‚ç∞ == "UniqueRelationship") # <>=<>=<>=<>=<>
            # Œ®m_Min = hydroRelation.FUNC_œÉ_2_Œ®m(;Œ®macMat=Œ®macMat‚ÇÇ, œÉ=hydro‚ÇÇ.œÉ[iZ], PœÉ=PœÉ, Œ®m_Min=hydro‚ÇÇ.Œ®macMat[iZ], Œ®m_Max=hydro‚ÇÇ.Œ®m_Max[iZ], üéè_Min=true)

            # Œ®m_Max = hydroRelation.FUNC_œÉ_2_Œ®m(;Œ®macMat=Œ®macMat‚ÇÇ, œÉ=hydro‚ÇÇ.œÉ[iZ], PœÉ=PœÉ, Œ®m_Min=hydro‚ÇÇ.Œ®macMat[iZ], Œ®m_Max=hydro‚ÇÇ.Œ®m_Max[iZ], üéè_Min=false)

				hydro‚ÇÇ.Œ®m[iZ] = min( ( hydro‚ÇÇ.Œ®macMat[iZ]^ 0.75) * exp(hydro‚ÇÇ.œÉ[iZ] * PœÉ), hydro‚ÇÇ.Œ®m_Max[iZ])

			end #option.infilt.œÉ_2_Œ®m‚ç∞
		return hydro‚ÇÇ
		end
	# ----------------------------------------------------------------


	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	#		FUNCTION : FUNC_Œ®mMode
	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		function FUNC_Œ®mMode(;Œ®m‚ÇÄ , œÉ‚ÇÄ)
		# exp(log(Œ®m‚ÇÄ) - œÉ‚ÇÄ^2)
			Œ®m_Mode = Œ®m‚ÇÄ * exp(- œÉ‚ÇÄ^2.0)	
		return Œ®m_Mode
		end  # function: FUNC_Œ®mMode
	# ------------------------------------------------------------------


	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	#		FUNCTION : œÉ_2_Œ∏r
	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		# function œÉ_2_Œ∏r(hydro‚ÇÇ, iZ; Œ±‚ÇÅ=17.5, Œ±‚ÇÇ=4.0)
		# 	œÉ_Œ∑ = (hydro‚ÇÇ.œÉ[iZ] - hydro‚ÇÇ.œÉ_Min[iZ]) / (hydro‚ÇÇ.œÉ_Max[iZ] - hydro‚ÇÇ.œÉ_Min[iZ]) 	
		# return (hydro‚ÇÇ.Œ∏r_Max[iZ] * (1.0 - exp(-Œ±‚ÇÅ * œÉ_Œ∑ ^ Œ±‚ÇÇ))) / (1.0 - exp(-Œ±‚ÇÅ * 1.0 ^ Œ±‚ÇÇ))
		# end  # function: œÉ_2_Œ∏r

			# Œ±‚ÇÅ_Max =0.75
			# Œ±‚ÇÅ_Min =0.6
			# function œÉ_2_Œ∏r0(hydro‚ÇÇ, iZ; Œ±‚ÇÅ=0.7)
			# 	œÉ_Œ∑ = (hydro‚ÇÇ.œÉ[iZ] - hydro‚ÇÇ.œÉ_Min[iZ]) / (hydro‚ÇÇ.œÉ_Max[iZ] - hydro‚ÇÇ.œÉ_Min[iZ]) 
				
			# 	return hydro‚ÇÇ.Œ∏r_Max[iZ] * min(œÉ_Œ∑ / Œ±‚ÇÅ, 1.0)
			# end # function: œÉ_2_Œ∏r

	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	#		FUNCTION : œÉ_2_Œ∏r
	# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		function œÉ_2_Œ∏r(hydro‚ÇÇ, iZ; X1=0.7, X2=2.9)
			Y2 = hydro‚ÇÇ.Œ∏r_Max[iZ]
			Y1 = 0.0
			A  = (Y2 - Y1) / (X2 - X1)
			B  = Y1 - X1 * A
		return min(max(A * hydro‚ÇÇ.œÉ[iZ] + B, 0.0), hydro‚ÇÇ.Œ∏r_Max[iZ])
		end # function: œÉ_2_Œ∏r
	# ----------------------------------------------------------------	

end  # module: hydroRealation